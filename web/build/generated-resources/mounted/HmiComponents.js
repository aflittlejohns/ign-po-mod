!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t(require("PerspectiveClient"),require("React")):"function"==typeof define&&define.amd?define("HmiComponents",["PerspectiveClient","React"],t):"object"==typeof exports?exports.HmiComponents=t(require("PerspectiveClient"),require("React")):e.HmiComponents=t(e.PerspectiveClient,e.React)}(self,((e,t)=>(()=>{var n={11:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.unsafeStringify=void 0;const r=n(746),o=[];for(let e=0;e<256;++e)o.push((e+256).toString(16).slice(1));function a(e,t=0){return(o[e[t+0]]+o[e[t+1]]+o[e[t+2]]+o[e[t+3]]+"-"+o[e[t+4]]+o[e[t+5]]+"-"+o[e[t+6]]+o[e[t+7]]+"-"+o[e[t+8]]+o[e[t+9]]+"-"+o[e[t+10]]+o[e[t+11]]+o[e[t+12]]+o[e[t+13]]+o[e[t+14]]+o[e[t+15]]).toLowerCase()}t.unsafeStringify=a,t.default=function(e,t=0){const n=a(e,t);if(!(0,r.default)(n))throw TypeError("Stringified UUID is invalid");return n}},124:e=>{"use strict";var t,n=Object.defineProperty,r=Object.getOwnPropertyDescriptor,o=Object.getOwnPropertyNames,a=Object.prototype.hasOwnProperty,l={};((e,t)=>{for(var r in t)n(e,r,{get:t[r],enumerable:!0})})(l,{Immer:()=>H,applyPatches:()=>le,castDraft:()=>se,castImmutable:()=>ce,createDraft:()=>ie,current:()=>J,enableMapSet:()=>ee,enablePatches:()=>Z,finishDraft:()=>ue,freeze:()=>M,immerable:()=>u,isDraft:()=>d,isDraftable:()=>v,nothing:()=>i,original:()=>b,produce:()=>ne,produceWithPatches:()=>re,setAutoFreeze:()=>oe,setUseStrictShallowCopy:()=>ae}),e.exports=(t=l,((e,t,l,i)=>{if(t&&"object"==typeof t||"function"==typeof t)for(let l of o(t))!a.call(e,l)&&undefined!==l&&n(e,l,{get:()=>t[l],enumerable:!(i=r(t,l))||i.enumerable});return e})(n({},"__esModule",{value:!0}),t));var i=Symbol.for("immer-nothing"),u=Symbol.for("immer-draftable"),s=Symbol.for("immer-state");function c(e,...t){throw new Error(`[Immer] minified error nr: ${e}. Full error at: https://bit.ly/3cXEKWf`)}var f=Object.getPrototypeOf;function d(e){return!!e&&!!e[s]}function v(e){return!!e&&(m(e)||Array.isArray(e)||!!e[u]||!!e.constructor?.[u]||_(e)||V(e))}var p=Object.prototype.constructor.toString();function m(e){if(!e||"object"!=typeof e)return!1;let t=f(e);if(null===t)return!0;let n=Object.hasOwnProperty.call(t,"constructor")&&t.constructor;return n===Object||"function"==typeof n&&Function.toString.call(n)===p}function b(e){return d(e)||c(15),e[s].t}function h(e,t){0===y(e)?Reflect.ownKeys(e).forEach((n=>{t(n,e[n],e)})):e.forEach(((n,r)=>t(r,n,e)))}function y(e){let t=e[s];return t?t.o:Array.isArray(e)?1:_(e)?2:V(e)?3:0}function g(e,t){return 2===y(e)?e.has(t):Object.prototype.hasOwnProperty.call(e,t)}function P(e,t){return 2===y(e)?e.get(t):e[t]}function A(e,t,n){let r=y(e);2===r?e.set(t,n):3===r?e.add(n):e[t]=n}function _(e){return e instanceof Map}function V(e){return e instanceof Set}function O(e){return e.e||e.t}function C(e,t){if(_(e))return new Map(e);if(V(e))return new Set(e);if(Array.isArray(e))return Array.prototype.slice.call(e);let n=m(e);if(!0===t||"class_only"===t&&!n){let t=Object.getOwnPropertyDescriptors(e);delete t[s];let n=Reflect.ownKeys(t);for(let r=0;r<n.length;r++){let o=n[r],a=t[o];!1===a.writable&&(a.writable=!0,a.configurable=!0),(a.get||a.set)&&(t[o]={configurable:!0,writable:!0,enumerable:a.enumerable,value:e[o]})}return Object.create(f(e),t)}{let t=f(e);if(null!==t&&n)return{...e};let r=Object.create(t);return Object.assign(r,e)}}function M(e,t=!1){return E(e)||d(e)||!v(e)||(y(e)>1&&(e.set=e.add=e.clear=e.delete=w),Object.freeze(e),t&&Object.entries(e).forEach((([e,t])=>M(t,!0)))),e}function w(){c(2)}function E(e){return Object.isFrozen(e)}var S,N={};function I(e){let t=N[e];return t||c(0),t}function j(e,t){N[e]||(N[e]=t)}function D(){return S}function U(e,t){t&&(I("Patches"),e.f=[],e.h=[],e.b=t)}function x(e){T(e),e.a.forEach(k),e.a=null}function T(e){e===S&&(S=e.i)}function B(e){return S=function(e,t){return{a:[],i:e,p:t,P:!0,d:0}}(S,e)}function k(e){let t=e[s];0===t.o||1===t.o?t.x():t.m=!0}function L(e,t){t.d=t.a.length;let n=t.a[0];return void 0!==e&&e!==n?(n[s].s&&(x(t),c(4)),v(e)&&(e=R(t,e),t.i||$(t,e)),t.f&&I("Patches").T(n[s].t,e,t.f,t.h)):e=R(t,n,[]),x(t),t.f&&t.b(t.f,t.h),e!==i?e:void 0}function R(e,t,n){if(E(t))return t;let r=t[s];if(!r)return h(t,((o,a)=>F(e,r,t,o,a,n))),t;if(r.n!==e)return t;if(!r.s)return $(e,r.t,!0),r.t;if(!r.c){r.c=!0,r.n.d--;let t=r.e,o=t,a=!1;3===r.o&&(o=new Set(t),t.clear(),a=!0),h(o,((o,l)=>F(e,r,t,o,l,n,a))),$(e,t,!1),n&&e.f&&I("Patches").g(r,n,e.f,e.h)}return r.e}function F(e,t,n,r,o,a,l){if(d(o)){let l=R(e,o,a&&t&&3!==t.o&&!g(t.r,r)?a.concat(r):void 0);if(A(n,r,l),!d(l))return;e.P=!1}else l&&n.add(o);if(v(o)&&!E(o)){if(!e.p.y&&e.d<1)return;R(e,o),(!t||!t.n.i)&&"symbol"!=typeof r&&Object.prototype.propertyIsEnumerable.call(n,r)&&$(e,o)}}function $(e,t,n=!1){!e.i&&e.p.y&&e.P&&M(t,n)}var z={get(e,t){if(t===s)return e;let n=O(e);if(!g(n,t))return function(e,t,n){let r=G(t,n);return r?"value"in r?r.value:r.get?.call(e.u):void 0}(e,n,t);let r=n[t];return e.c||!v(r)?r:r===Y(e.t,t)?(X(e),e.e[t]=W(r,e)):r},has:(e,t)=>t in O(e),ownKeys:e=>Reflect.ownKeys(O(e)),set(e,t,n){let r=G(O(e),t);if(r?.set)return r.set.call(e.u,n),!0;if(!e.s){let r=Y(O(e),t),o=r?.[s];if(o&&o.t===n)return e.e[t]=n,e.r[t]=!1,!0;if(function(e,t){return e===t?0!==e||1/e==1/t:e!=e&&t!=t}(n,r)&&(void 0!==n||g(e.t,t)))return!0;X(e),K(e)}return e.e[t]===n&&(void 0!==n||t in e.e)||Number.isNaN(n)&&Number.isNaN(e.e[t])||(e.e[t]=n,e.r[t]=!0),!0},deleteProperty:(e,t)=>(void 0!==Y(e.t,t)||t in e.t?(e.r[t]=!1,X(e),K(e)):delete e.r[t],e.e&&delete e.e[t],!0),getOwnPropertyDescriptor(e,t){let n=O(e),r=Reflect.getOwnPropertyDescriptor(n,t);return r&&{writable:!0,configurable:1!==e.o||"length"!==t,enumerable:r.enumerable,value:n[t]}},defineProperty(){c(11)},getPrototypeOf:e=>f(e.t),setPrototypeOf(){c(12)}},q={};function Y(e,t){let n=e[s];return(n?O(n):e)[t]}function G(e,t){if(!(t in e))return;let n=f(e);for(;n;){let e=Object.getOwnPropertyDescriptor(n,t);if(e)return e;n=f(n)}}function K(e){e.s||(e.s=!0,e.i&&K(e.i))}function X(e){e.e||(e.e=C(e.t,e.n.p.S))}h(z,((e,t)=>{q[e]=function(){return arguments[0]=arguments[0][0],t.apply(this,arguments)}})),q.deleteProperty=function(e,t){return q.set.call(this,e,t,void 0)},q.set=function(e,t,n){return z.set.call(this,e[0],t,n,e[0])};var H=class{constructor(e){this.y=!0,this.S=!1,this.produce=(e,t,n)=>{if("function"==typeof e&&"function"!=typeof t){let n=t;t=e;let r=this;return function(e=n,...o){return r.produce(e,(e=>t.call(this,e,...o)))}}let r;if("function"!=typeof t&&c(6),void 0!==n&&"function"!=typeof n&&c(7),v(e)){let o=B(this),a=W(e,void 0),l=!0;try{r=t(a),l=!1}finally{l?x(o):T(o)}return U(o,n),L(r,o)}if(!e||"object"!=typeof e){if(r=t(e),void 0===r&&(r=e),r===i&&(r=void 0),this.y&&M(r,!0),n){let t=[],o=[];I("Patches").T(e,r,t,o),n(t,o)}return r}c(1)},this.produceWithPatches=(e,t)=>{if("function"==typeof e)return(t,...n)=>this.produceWithPatches(t,(t=>e(t,...n)));let n,r;return[this.produce(e,t,((e,t)=>{n=e,r=t})),n,r]},"boolean"==typeof e?.autoFreeze&&this.setAutoFreeze(e.autoFreeze),"boolean"==typeof e?.useStrictShallowCopy&&this.setUseStrictShallowCopy(e.useStrictShallowCopy)}createDraft(e){v(e)||c(8),d(e)&&(e=J(e));let t=B(this),n=W(e,void 0);return n[s].l=!0,T(t),n}finishDraft(e,t){let n=e&&e[s];(!n||!n.l)&&c(9);let{n:r}=n;return U(r,t),L(void 0,r)}setAutoFreeze(e){this.y=e}setUseStrictShallowCopy(e){this.S=e}applyPatches(e,t){let n;for(n=t.length-1;n>=0;n--){let r=t[n];if(0===r.path.length&&"replace"===r.op){e=r.value;break}}n>-1&&(t=t.slice(n+1));let r=I("Patches").A;return d(e)?r(e,t):this.produce(e,(e=>r(e,t)))}};function W(e,t){let n=_(e)?I("MapSet").I(e,t):V(e)?I("MapSet").D(e,t):function(e,t){let n=Array.isArray(e),r={o:n?1:0,n:t?t.n:D(),s:!1,c:!1,r:{},i:t,t:e,u:null,e:null,x:null,l:!1},o=r,a=z;n&&(o=[r],a=q);let{revoke:l,proxy:i}=Proxy.revocable(o,a);return r.u=i,r.x=l,i}(e,t);return(t?t.n:D()).a.push(n),n}function J(e){return d(e)||c(10),Q(e)}function Q(e){if(!v(e)||E(e))return e;let t,n=e[s];if(n){if(!n.s)return n.t;n.c=!0,t=C(e,n.n.p.S)}else t=C(e,!0);return h(t,((e,n)=>{A(t,e,Q(n))})),n&&(n.c=!1),t}function Z(){let e="replace",t="add",n="remove";function r(e){if(!v(e))return e;if(Array.isArray(e))return e.map(r);if(_(e))return new Map(Array.from(e.entries()).map((([e,t])=>[e,r(t)])));if(V(e))return new Set(Array.from(e).map(r));let t=Object.create(f(e));for(let n in e)t[n]=r(e[n]);return g(e,u)&&(t[u]=e[u]),t}function o(e){return d(e)?r(e):e}j("Patches",{A:function(o,a){return a.forEach((a=>{let{path:l,op:i}=a,u=o;for(let e=0;e<l.length-1;e++){let t=y(u),n=l[e];"string"!=typeof n&&"number"!=typeof n&&(n=""+n),(0===t||1===t)&&("__proto__"===n||"constructor"===n)&&c(19),"function"==typeof u&&"prototype"===n&&c(19),u=P(u,n),"object"!=typeof u&&c(18,l.join("/"))}let s=y(u),f=r(a.value),d=l[l.length-1];switch(i){case e:switch(s){case 2:return u.set(d,f);case 3:c(16);default:return u[d]=f}case t:switch(s){case 1:return"-"===d?u.push(f):u.splice(d,0,f);case 2:return u.set(d,f);case 3:return u.add(f);default:return u[d]=f}case n:switch(s){case 1:return u.splice(d,1);case 2:return u.delete(d);case 3:return u.delete(a.value);default:return delete u[d]}default:c(17)}})),o},g:function(r,a,l,i){switch(r.o){case 0:case 2:return function(r,a,l,i){let{t:u,e:s}=r;h(r.r,((r,c)=>{let f=P(u,r),d=P(s,r),v=c?g(u,r)?e:t:n;if(f===d&&v===e)return;let p=a.concat(r);l.push(v===n?{op:v,path:p}:{op:v,path:p,value:d}),i.push(v===t?{op:n,path:p}:v===n?{op:t,path:p,value:o(f)}:{op:e,path:p,value:o(f)})}))}(r,a,l,i);case 1:return function(r,a,l,i){let{t:u,r:s}=r,c=r.e;c.length<u.length&&([u,c]=[c,u],[l,i]=[i,l]);for(let t=0;t<u.length;t++)if(s[t]&&c[t]!==u[t]){let n=a.concat([t]);l.push({op:e,path:n,value:o(c[t])}),i.push({op:e,path:n,value:o(u[t])})}for(let e=u.length;e<c.length;e++){let n=a.concat([e]);l.push({op:t,path:n,value:o(c[e])})}for(let e=c.length-1;u.length<=e;--e){let t=a.concat([e]);i.push({op:n,path:t})}}(r,a,l,i);case 3:return function(e,r,o,a){let{t:l,e:i}=e,u=0;l.forEach((e=>{if(!i.has(e)){let l=r.concat([u]);o.push({op:n,path:l,value:e}),a.unshift({op:t,path:l,value:e})}u++})),u=0,i.forEach((e=>{if(!l.has(e)){let l=r.concat([u]);o.push({op:t,path:l,value:e}),a.unshift({op:n,path:l,value:e})}u++}))}(r,a,l,i)}},T:function(t,n,r,o){r.push({op:e,path:[],value:n===i?void 0:n}),o.push({op:e,path:[],value:t})}})}function ee(){class e extends Map{constructor(e,t){super(),this[s]={o:2,i:t,n:t?t.n:D(),s:!1,c:!1,e:void 0,r:void 0,t:e,u:this,l:!1,m:!1}}get size(){return O(this[s]).size}has(e){return O(this[s]).has(e)}set(e,n){let r=this[s];return o(r),(!O(r).has(e)||O(r).get(e)!==n)&&(t(r),K(r),r.r.set(e,!0),r.e.set(e,n),r.r.set(e,!0)),this}delete(e){if(!this.has(e))return!1;let n=this[s];return o(n),t(n),K(n),n.t.has(e)?n.r.set(e,!1):n.r.delete(e),n.e.delete(e),!0}clear(){let e=this[s];o(e),O(e).size&&(t(e),K(e),e.r=new Map,h(e.t,(t=>{e.r.set(t,!1)})),e.e.clear())}forEach(e,t){O(this[s]).forEach(((n,r,o)=>{e.call(t,this.get(r),r,this)}))}get(e){let n=this[s];o(n);let r=O(n).get(e);if(n.c||!v(r)||r!==n.t.get(e))return r;let a=W(r,n);return t(n),n.e.set(e,a),a}keys(){return O(this[s]).keys()}values(){let e=this.keys();return{[Symbol.iterator]:()=>this.values(),next:()=>{let t=e.next();return t.done?t:{done:!1,value:this.get(t.value)}}}}entries(){let e=this.keys();return{[Symbol.iterator]:()=>this.entries(),next:()=>{let t=e.next();if(t.done)return t;let n=this.get(t.value);return{done:!1,value:[t.value,n]}}}}[Symbol.iterator](){return this.entries()}}function t(e){e.e||(e.r=new Map,e.e=new Map(e.t))}class n extends Set{constructor(e,t){super(),this[s]={o:3,i:t,n:t?t.n:D(),s:!1,c:!1,e:void 0,t:e,u:this,a:new Map,m:!1,l:!1}}get size(){return O(this[s]).size}has(e){let t=this[s];return o(t),t.e?!!(t.e.has(e)||t.a.has(e)&&t.e.has(t.a.get(e))):t.t.has(e)}add(e){let t=this[s];return o(t),this.has(e)||(r(t),K(t),t.e.add(e)),this}delete(e){if(!this.has(e))return!1;let t=this[s];return o(t),r(t),K(t),t.e.delete(e)||!!t.a.has(e)&&t.e.delete(t.a.get(e))}clear(){let e=this[s];o(e),O(e).size&&(r(e),K(e),e.e.clear())}values(){let e=this[s];return o(e),r(e),e.e.values()}entries(){let e=this[s];return o(e),r(e),e.e.entries()}keys(){return this.values()}[Symbol.iterator](){return this.values()}forEach(e,t){let n=this.values(),r=n.next();for(;!r.done;)e.call(t,r.value,r.value,this),r=n.next()}}function r(e){e.e||(e.e=new Set,e.t.forEach((t=>{if(v(t)){let n=W(t,e);e.a.set(t,n),e.e.add(n)}else e.e.add(t)})))}function o(e){e.m&&c(3,JSON.stringify(O(e)))}j("MapSet",{I:function(t,n){return new e(t,n)},D:function(e,t){return new n(e,t)}})}var te=new H,ne=te.produce,re=te.produceWithPatches.bind(te),oe=te.setAutoFreeze.bind(te),ae=te.setUseStrictShallowCopy.bind(te),le=te.applyPatches.bind(te),ie=te.createDraft.bind(te),ue=te.finishDraft.bind(te);function se(e){return e}function ce(e){return e}},152:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=n(883),o=({itemClassName:e,handleClick:t})=>r.createElement("div",{className:e,onClick:t});o.displayName="Item",t.default=o},182:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.version=t.validate=t.v7=t.v6ToV1=t.v6=t.v5=t.v4=t.v3=t.v1ToV6=t.v1=t.stringify=t.parse=t.NIL=t.MAX=void 0;var r=n(196);Object.defineProperty(t,"MAX",{enumerable:!0,get:function(){return r.default}});var o=n(465);Object.defineProperty(t,"NIL",{enumerable:!0,get:function(){return o.default}});var a=n(797);Object.defineProperty(t,"parse",{enumerable:!0,get:function(){return a.default}});var l=n(11);Object.defineProperty(t,"stringify",{enumerable:!0,get:function(){return l.default}});var i=n(425);Object.defineProperty(t,"v1",{enumerable:!0,get:function(){return i.default}});var u=n(568);Object.defineProperty(t,"v1ToV6",{enumerable:!0,get:function(){return u.default}});var s=n(591);Object.defineProperty(t,"v3",{enumerable:!0,get:function(){return s.default}});var c=n(286);Object.defineProperty(t,"v4",{enumerable:!0,get:function(){return c.default}});var f=n(557);Object.defineProperty(t,"v5",{enumerable:!0,get:function(){return f.default}});var d=n(356);Object.defineProperty(t,"v6",{enumerable:!0,get:function(){return d.default}});var v=n(268);Object.defineProperty(t,"v6ToV1",{enumerable:!0,get:function(){return v.default}});var p=n(299);Object.defineProperty(t,"v7",{enumerable:!0,get:function(){return p.default}});var m=n(746);Object.defineProperty(t,"validate",{enumerable:!0,get:function(){return m.default}});var b=n(770);Object.defineProperty(t,"version",{enumerable:!0,get:function(){return b.default}})},196:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default="ffffffff-ffff-ffff-ffff-ffffffffffff"},268:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=n(797),o=n(11);t.default=function(e){const t=(n="string"==typeof e?(0,r.default)(e):e,Uint8Array.of((15&n[3])<<4|n[4]>>4&15,(15&n[4])<<4|(240&n[5])>>4,(15&n[5])<<4|15&n[6],n[7],(15&n[1])<<4|(240&n[2])>>4,(15&n[2])<<4|(240&n[3])>>4,16|(240&n[0])>>4,(15&n[0])<<4|(240&n[1])>>4,n[8],n[9],n[10],n[11],n[12],n[13],n[14],n[15]));var n;return"string"==typeof e?(0,o.unsafeStringify)(t):t}},286:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=n(779),o=n(291),a=n(11);t.default=function(e,t,n){if(r.default.randomUUID&&!t&&!e)return r.default.randomUUID();const l=(e=e||{}).random??e.rng?.()??(0,o.default)();if(l.length<16)throw new Error("Random bytes length must be >= 16");if(l[6]=15&l[6]|64,l[8]=63&l[8]|128,t){if((n=n||0)<0||n+16>t.length)throw new RangeError(`UUID byte range ${n}:${n+15} is out of buffer bounds`);for(let e=0;e<16;++e)t[n+e]=l[e];return t}return(0,a.unsafeStringify)(l)}},291:(e,t)=>{"use strict";let n;Object.defineProperty(t,"__esModule",{value:!0});const r=new Uint8Array(16);t.default=function(){if(!n){if("undefined"==typeof crypto||!crypto.getRandomValues)throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");n=crypto.getRandomValues.bind(crypto)}return n(r)}},299:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.updateV7State=void 0;const r=n(291),o=n(11),a={};function l(e,t,n){return e.msecs??=-1/0,e.seq??=0,t>e.msecs?(e.seq=n[6]<<23|n[7]<<16|n[8]<<8|n[9],e.msecs=t):(e.seq=e.seq+1|0,0===e.seq&&e.msecs++),e}function i(e,t,n,r,o=0){if(e.length<16)throw new Error("Random bytes length must be >= 16");if(r){if(o<0||o+16>r.length)throw new RangeError(`UUID byte range ${o}:${o+15} is out of buffer bounds`)}else r=new Uint8Array(16),o=0;return t??=Date.now(),n??=127*e[6]<<24|e[7]<<16|e[8]<<8|e[9],r[o++]=t/1099511627776&255,r[o++]=t/4294967296&255,r[o++]=t/16777216&255,r[o++]=t/65536&255,r[o++]=t/256&255,r[o++]=255&t,r[o++]=112|n>>>28&15,r[o++]=n>>>20&255,r[o++]=128|n>>>14&63,r[o++]=n>>>6&255,r[o++]=n<<2&255|3&e[10],r[o++]=e[11],r[o++]=e[12],r[o++]=e[13],r[o++]=e[14],r[o++]=e[15],r}t.updateV7State=l,t.default=function(e,t,n){let u;if(e)u=i(e.random??e.rng?.()??(0,r.default)(),e.msecs,e.seq,t,n);else{const e=Date.now(),o=(0,r.default)();l(a,e,o),u=i(o,a.msecs,a.seq,t,n)}return t??(0,o.unsafeStringify)(u)}},338:(e,t)=>{"use strict";function n(e){return 14+(e+64>>>9<<4)+1}function r(e,t){const n=(65535&e)+(65535&t);return(e>>16)+(t>>16)+(n>>16)<<16|65535&n}function o(e,t,n,o,a,l){return r((i=r(r(t,e),r(o,l)))<<(u=a)|i>>>32-u,n);var i,u}function a(e,t,n,r,a,l,i){return o(t&n|~t&r,e,t,a,l,i)}function l(e,t,n,r,a,l,i){return o(t&r|n&~r,e,t,a,l,i)}function i(e,t,n,r,a,l,i){return o(t^n^r,e,t,a,l,i)}function u(e,t,n,r,a,l,i){return o(n^(t|~r),e,t,a,l,i)}Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return function(e){const t=new Uint8Array(4*e.length);for(let n=0;n<4*e.length;n++)t[n]=e[n>>2]>>>n%4*8&255;return t}(function(e,t){const o=new Uint32Array(n(t)).fill(0);o.set(e),o[t>>5]|=128<<t%32,o[o.length-1]=t,e=o;let s=1732584193,c=-271733879,f=-1732584194,d=271733878;for(let t=0;t<e.length;t+=16){const n=s,o=c,v=f,p=d;s=a(s,c,f,d,e[t],7,-680876936),d=a(d,s,c,f,e[t+1],12,-389564586),f=a(f,d,s,c,e[t+2],17,606105819),c=a(c,f,d,s,e[t+3],22,-1044525330),s=a(s,c,f,d,e[t+4],7,-176418897),d=a(d,s,c,f,e[t+5],12,1200080426),f=a(f,d,s,c,e[t+6],17,-1473231341),c=a(c,f,d,s,e[t+7],22,-45705983),s=a(s,c,f,d,e[t+8],7,1770035416),d=a(d,s,c,f,e[t+9],12,-1958414417),f=a(f,d,s,c,e[t+10],17,-42063),c=a(c,f,d,s,e[t+11],22,-1990404162),s=a(s,c,f,d,e[t+12],7,1804603682),d=a(d,s,c,f,e[t+13],12,-40341101),f=a(f,d,s,c,e[t+14],17,-1502002290),c=a(c,f,d,s,e[t+15],22,1236535329),s=l(s,c,f,d,e[t+1],5,-165796510),d=l(d,s,c,f,e[t+6],9,-1069501632),f=l(f,d,s,c,e[t+11],14,643717713),c=l(c,f,d,s,e[t],20,-373897302),s=l(s,c,f,d,e[t+5],5,-701558691),d=l(d,s,c,f,e[t+10],9,38016083),f=l(f,d,s,c,e[t+15],14,-660478335),c=l(c,f,d,s,e[t+4],20,-405537848),s=l(s,c,f,d,e[t+9],5,568446438),d=l(d,s,c,f,e[t+14],9,-1019803690),f=l(f,d,s,c,e[t+3],14,-187363961),c=l(c,f,d,s,e[t+8],20,1163531501),s=l(s,c,f,d,e[t+13],5,-1444681467),d=l(d,s,c,f,e[t+2],9,-51403784),f=l(f,d,s,c,e[t+7],14,1735328473),c=l(c,f,d,s,e[t+12],20,-1926607734),s=i(s,c,f,d,e[t+5],4,-378558),d=i(d,s,c,f,e[t+8],11,-2022574463),f=i(f,d,s,c,e[t+11],16,1839030562),c=i(c,f,d,s,e[t+14],23,-35309556),s=i(s,c,f,d,e[t+1],4,-1530992060),d=i(d,s,c,f,e[t+4],11,1272893353),f=i(f,d,s,c,e[t+7],16,-155497632),c=i(c,f,d,s,e[t+10],23,-1094730640),s=i(s,c,f,d,e[t+13],4,681279174),d=i(d,s,c,f,e[t],11,-358537222),f=i(f,d,s,c,e[t+3],16,-722521979),c=i(c,f,d,s,e[t+6],23,76029189),s=i(s,c,f,d,e[t+9],4,-640364487),d=i(d,s,c,f,e[t+12],11,-421815835),f=i(f,d,s,c,e[t+15],16,530742520),c=i(c,f,d,s,e[t+2],23,-995338651),s=u(s,c,f,d,e[t],6,-198630844),d=u(d,s,c,f,e[t+7],10,1126891415),f=u(f,d,s,c,e[t+14],15,-1416354905),c=u(c,f,d,s,e[t+5],21,-57434055),s=u(s,c,f,d,e[t+12],6,1700485571),d=u(d,s,c,f,e[t+3],10,-1894986606),f=u(f,d,s,c,e[t+10],15,-1051523),c=u(c,f,d,s,e[t+1],21,-2054922799),s=u(s,c,f,d,e[t+8],6,1873313359),d=u(d,s,c,f,e[t+15],10,-30611744),f=u(f,d,s,c,e[t+6],15,-1560198380),c=u(c,f,d,s,e[t+13],21,1309151649),s=u(s,c,f,d,e[t+4],6,-145523070),d=u(d,s,c,f,e[t+11],10,-1120210379),f=u(f,d,s,c,e[t+2],15,718787259),c=u(c,f,d,s,e[t+9],21,-343485551),s=r(s,n),c=r(c,o),f=r(f,v),d=r(d,p)}return Uint32Array.of(s,c,f,d)}(function(e){if(0===e.length)return new Uint32Array;const t=new Uint32Array(n(8*e.length)).fill(0);for(let n=0;n<e.length;n++)t[n>>2]|=(255&e[n])<<n%4*8;return t}(e),8*e.length))}},348:(e,t,n)=>{var r=n(407),o=n(883);t.useImmer=function(e){var t=o.useState((function(){return r.freeze("function"==typeof e?e():e,!0)})),n=t[1];return[t[0],o.useCallback((function(e){n("function"==typeof e?r.produce(e):r.freeze(e))}),[])]},t.useImmerReducer=function(e,t,n){var a=o.useMemo((function(){return r.produce(e)}),[e]);return o.useReducer(a,t,n)}},356:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=n(11),o=n(425),a=n(568);t.default=function(e,t,n){e??={},n??=0;let l=(0,o.default)({...e,_v6:!0},new Uint8Array(16));if(l=(0,a.default)(l),t){for(let e=0;e<16;e++)t[n+e]=l[e];return t}return(0,r.unsafeStringify)(l)}},377:t=>{"use strict";t.exports=e},390:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.parameterInitialState=t.valveProps=t.valveStatus=void 0,t.valveStatus={alarm:!1,actFB:!1,deActFB:!0,activatedConfig:7,deactivatedConfig:5,tagName:"VXXX",manual:!1,masked:!1,changing:!1,locate:!1},t.valveProps={ValveStatus:t.valveStatus,handleClick:()=>{console.log("Valve clicked")}},t.parameterInitialState=[{label:{text:"label",className:"",tooltipText:"",tooltipPosition:"",tooltipClassName:"",tooltipId:""},input:{type:"text",inputmode:"numeric",placeholder:"",editable:!0,pattern:"^[0-9]*[.,]?[0-9]*$",min:0,max:100,decimalPlaces:2,eu:"",value:0}}]},407:(e,t,n)=>{"use strict";e.exports=n(124)},425:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.updateV1State=void 0;const r=n(291),o=n(11),a={};function l(e,t,n){return e.msecs??=-1/0,e.nsecs??=0,t===e.msecs?(e.nsecs++,e.nsecs>=1e4&&(e.node=void 0,e.nsecs=0)):t>e.msecs?e.nsecs=0:t<e.msecs&&(e.node=void 0),e.node||(e.node=n.slice(10,16),e.node[0]|=1,e.clockseq=16383&(n[8]<<8|n[9])),e.msecs=t,e}function i(e,t,n,r,o,a,l=0){if(e.length<16)throw new Error("Random bytes length must be >= 16");if(a){if(l<0||l+16>a.length)throw new RangeError(`UUID byte range ${l}:${l+15} is out of buffer bounds`)}else a=new Uint8Array(16),l=0;t??=Date.now(),n??=0,r??=16383&(e[8]<<8|e[9]),o??=e.slice(10,16);const i=(1e4*(268435455&(t+=122192928e5))+n)%4294967296;a[l++]=i>>>24&255,a[l++]=i>>>16&255,a[l++]=i>>>8&255,a[l++]=255&i;const u=t/4294967296*1e4&268435455;a[l++]=u>>>8&255,a[l++]=255&u,a[l++]=u>>>24&15|16,a[l++]=u>>>16&255,a[l++]=r>>>8|128,a[l++]=255&r;for(let e=0;e<6;++e)a[l++]=o[e];return a}t.updateV1State=l,t.default=function(e,t,n){let u;const s=e?._v6??!1;if(e){const t=Object.keys(e);1===t.length&&"_v6"===t[0]&&(e=void 0)}if(e)u=i(e.random??e.rng?.()??(0,r.default)(),e.msecs,e.nsecs,e.clockseq,e.node,t,n);else{const e=Date.now(),o=(0,r.default)();l(a,e,o),u=i(o,a.msecs,a.nsecs,s?void 0:a.clockseq,s?void 0:a.node,t,n)}return t??(0,o.unsafeStringify)(u)}},429:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getBoolAtIndex=void 0,t.getBoolAtIndex=(e,t)=>Boolean(e>>t&1)},465:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default="00000000-0000-0000-0000-000000000000"},506:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.valveMpItemNames=t.itemNames=t.getValveMpItemClassName=t.getItemClassName=void 0;const r=n(429),o=n(542),a=n(182);t.getItemClassName=(e,t)=>{var n,o;let a="";const l=null!==(n=null==t?void 0:t.activatedConfig)&&void 0!==n?n:0,i=null!==(o=null==t?void 0:t.deactivatedConfig)&&void 0!==o?o:0;return a=e<12?(0,r.getBoolAtIndex)(l,e)&&(null==t?void 0:t.actFB)||(0,r.getBoolAtIndex)(i,e)&&(null==t?void 0:t.deActFB)?"show item":"hide item":14===e?"show":12===e||13===e?(0,r.getBoolAtIndex)(l,e)||(0,r.getBoolAtIndex)(i,e)?"show":"hide":15===e||16===e?(0,r.getBoolAtIndex)(l,12)||(0,r.getBoolAtIndex)(i,12)?"show":"hide":17===e?(0,r.getBoolAtIndex)(l,13)||(0,r.getBoolAtIndex)(i,13)?"show":"hide":18===e&&((0,r.getBoolAtIndex)(l,13)||(0,r.getBoolAtIndex)(i,13))?"show":"hide",a.includes("show")&&!a.includes("item")&&(console.log("index",e,a),(null==t?void 0:t.alarm)&&(a=a.replace("AlarmState","")+" AlarmState"),(null==t?void 0:t.changing)&&(a=a.replace("Changing","")+" Changing"),(null==t?void 0:t.manual)&&(a=a.replace("Manual","")+" Manual"),(null==t?void 0:t.masked)&&!t.alarm&&(a=a.replace("NoAlarmMask","")+" NoAlarmMask"),(null==t?void 0:t.masked)&&(a=a.replace("Masked","")+" Masked"),(null==t?void 0:t.actFB)&&(a=a.replace("Activated","")+" Activated"),(null==t?void 0:t.deActFB)&&(a=a.replace("Deactivated","")+" Deactivated"),(null==t?void 0:t.locate)&&(a=a.replace("circle","")+" circle")),a},t.getValveMpItemClassName=(e,t)=>{var n,o;let a="";const l=null!==(n=null==t?void 0:t.activatedConfig)&&void 0!==n?n:0,i=null!==(o=null==t?void 0:t.deactivatedConfig)&&void 0!==o?o:0;return console.log(t),e<8?a=(0,r.getBoolAtIndex)(l,e)&&(null==t?void 0:t.actFB)||(0,r.getBoolAtIndex)(i,e)&&(null==t?void 0:t.deActFB)?"show item":"hide item":9===e?a="show":8===e?a=(0,r.getBoolAtIndex)(l,e)||(0,r.getBoolAtIndex)(i,e)?"show":"hide":10===e?(console.log(`index ${e} deact config ${i} bit is ${(0,r.getBoolAtIndex)(i,10)}`),(0,r.getBoolAtIndex)(l,10)||(0,r.getBoolAtIndex)(i,10)?(a="show item",a=(null==t?void 0:t.usl)?a.replace("Activated","")+" Activated":a.replace("Deactivated","")+" Deactivated"):a="hide item"):11===e?(0,r.getBoolAtIndex)(l,11)||(0,r.getBoolAtIndex)(i,11)?(a="show item",a=(null==t?void 0:t.lsl)?a.replace("Activated","")+" Activated":a.replace("Deactivated","")+" Deactivated"):a="hide item":12===e&&((null==t?void 0:t.locate)?(a=a.replace("show item","")+" show item",((0,r.getBoolAtIndex)(l,8)||(0,r.getBoolAtIndex)(i,8))&&(a=a.replace("show large item","")+" show large item")):a=a.replace("hide item","")+" hide item"),a.includes("show")&&!a.includes("item")&&(console.log("index",e,a),(null==t?void 0:t.alarm)&&(a=a.replace("AlarmState","")+" AlarmState"),(null==t?void 0:t.changing)&&(a=a.replace("Changing","")+" Changing"),(null==t?void 0:t.manual)&&(a=a.replace("Manual","")+" Manual"),(null==t?void 0:t.masked)&&!t.alarm&&(a=a.replace("NoAlarmMask","")+" NoAlarmMask"),(null==t?void 0:t.masked)&&(a=a.replace("Masked","")+" Masked"),(null==t?void 0:t.actFB)&&(a=a.replace("Activated","")+" Activated"),(null==t?void 0:t.deActFB)&&(a=a.replace("Deactivated","")+" Deactivated")),console.log("index",e,a),a},t.itemNames=Object.entries(o.ItemNameEnum).map(((e,t)=>(console.log(`In build ItemNames name ${e} index ${t}`),{key:(0,a.v4)(),name:e,value:e[1],index:t}))),t.valveMpItemNames=Object.entries(o.valveMpItemNameEnum).map(((e,t)=>(console.log(`In build ItemNames name ${e} index ${t}`),{key:(0,a.v4)(),name:e,value:e[1],index:t})))},511:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.useValveReducer=function(){const[e,t]=(0,r.useImmerReducer)(a,o.valveStatus);return{state:e,reducer:{updateActConfig:function(e){t({type:"UPDATE_ACT_CONFIG",value:e})},updateDeActConfig:function(e){t({type:"UPDATE_DEACT_CONFIG",value:e})},updateAlarm:function(){t({type:"UPDATE_ALARM"})},updateActFB:function(){t({type:"UPDATE_ACT_FB"})},updateDeActFB:function(){t({type:"UPDATE_DE_ACT_FB"})},updateUsl:function(){t({type:"UPDATE_USL"})},updateLsl:function(){t({type:"UPDATE_LSL"})},updateManual:function(){t({type:"UPDATE_MANUAL"})},updateMasked:function(){t({type:"UPDATE_MASKED"})},updateChanging:function(){t({type:"UPDATE_CHANGING"})},updateLocate:function(){t({type:"UPDATE_LOCATE"})}}}},t.ParameterReducer=l,t.paramItemsReducer=function(){const[e,t]=(0,r.useImmerReducer)(l,o.parameterInitialState);return{state:e,reducer:{updateValue:function(e,n){t({type:"UPDATE_VALUE",index:e,value:n})}}}};const r=n(348),o=n(390);function a(e,t){switch(t.type){case"UPDATE_ACT_CONFIG":return e.activatedConfig=t.value,e;case"UPDATE_DEACT_CONFIG":return e.deactivatedConfig=t.value,e;case"UPDATE_ACT_FB":return e.actFB=!e.actFB,e;case"UPDATE_DE_ACT_FB":return e.deActFB=!e.deActFB,e;case"UPDATE_USL":return e.usl=!e.usl,e;case"UPDATE_LSL":return e.lsl=!e.lsl,e;case"UPDATE_MANUAL":return e.manual=!e.manual,e;case"UPDATE_ALARM":return e.alarm=!e.alarm,e;case"UPDATE_MASKED":return e.masked=!e.masked,e;case"UPDATE_CHANGING":return e.changing=!e.changing,e;case"UPDATE_LOCATE":return e.locate=!e.locate,e;default:return e}}function l(e,t){return"UPDATE_VALUE"===t.type?(e[t.index].input.value=t.value,e):e}},535:function(e,t,n){"use strict";var r=this&&this.__rest||function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var o=0;for(r=Object.getOwnPropertySymbols(e);o<r.length;o++)t.indexOf(r[o])<0&&Object.prototype.propertyIsEnumerable.call(e,r[o])&&(n[r[o]]=e[r[o]])}return n};Object.defineProperty(t,"__esModule",{value:!0}),t.useCreateContext=function(e,t){const n=o.createContext(t),a=e=>{const{children:t}=e,a=r(e,["children"]),l=o.useMemo((()=>a),Object.values(a));return o.createElement(n.Provider,{value:l},t)};return a.displayName=e+"Provider",[a,function(r){const a=o.useContext(n);if(a)return a;if(void 0!==t)return t;throw new Error(`\`${r}\` must be used within \`${e}\``)}]};const o=n(883)},542:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ItemPositionEnum=t.valveMpItemClickableNameEnum=t.ItemClickableNameEnum=t.valveMpItemNameEnum=t.ItemNameEnum=t.ValveClassNameEnum=t.VALVE_COMPONENT_TYPE=void 0,t.VALVE_COMPONENT_TYPE="hmi.process_objects.Valve",t.ValveClassNameEnum={AlarmState:"AlarmState",Activated:"Activated",Deactivated:"Deactivated",Manual:"Manual",Masked:"Masked",Changing:"Changing",NoAlarmMask:"NoAlarmMask",Locate:"Locate"},t.ItemNameEnum={V1b1:"v1b1",V1b2:"v1b2",V1b3:"v1b3",V1b4:"v1b4",V2b1:"v2b1",V2b2:"v2b2",V2b3:"v2b3",V2b4:"v2b4",V3b1:"v3b1",V3b2:"v3b2",V3b3:"v3b3",V3b4:"v3b4",V2:"v2",V3:"v3",V1:"v1",V2f1:"v2f1",V2f2:"v2f2",V3f1:"v3f1",V3f2:"v3f2"},t.valveMpItemNameEnum={V1b1:"v1b1",V1b2:"v1b2",V1b3:"v1b3",V1b4:"v1b4",V2b1:"v2b1",V2b2:"v2b2",V2b3:"v2b3",V2b4:"v2b4",V2:"v2",V1:"v1",usl:"usl",lsl:"lsl",locate:"locate"},t.ItemClickableNameEnum={V1b1:"v1b1",V1b2:"v1b2",V1b3:"v1b3",V1b4:"v1b4",V2b1:"v2b1",V2b2:"v2b2",V2b3:"v2b3",V2b4:"v2b4",V3b1:"v3b1",V3b2:"v3b2",V3b3:"v3b3",V3b4:"v3b4",V2:"v2",V3:"v3",V1:"v1"},t.valveMpItemClickableNameEnum={V1b1:"v1b1",V1b2:"v1b2",V1b3:"v1b3",V1b4:"v1b4",V2b1:"v2b1",V2b2:"v2b2",V2b3:"v2b3",V2b4:"v2b4",V2:"v2",V1:"v1"},t.ItemPositionEnum={v1b1:"v1b1",v1b2:"v1b2",v1b3:"v1b3",v1b4:"v1b4",v2b1:"v2b1",V2b2:"v2b2",v2b3:"v2b3",v2b4:"v2b4",v3b1:"v3b1",v3b2:"v3b2",v3b3:"v3b3",v3b4:"v3b4",v2:"v2",v3:"v3"}},557:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.URL=t.DNS=void 0;const r=n(829),o=n(988);var a=n(988);function l(e,t,n,a){return(0,o.default)(80,r.default,e,t,n,a)}Object.defineProperty(t,"DNS",{enumerable:!0,get:function(){return a.DNS}}),Object.defineProperty(t,"URL",{enumerable:!0,get:function(){return a.URL}}),l.DNS=o.DNS,l.URL=o.URL,t.default=l},568:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=n(797),o=n(11);t.default=function(e){const t=(n="string"==typeof e?(0,r.default)(e):e,Uint8Array.of((15&n[6])<<4|n[7]>>4&15,(15&n[7])<<4|(240&n[4])>>4,(15&n[4])<<4|(240&n[5])>>4,(15&n[5])<<4|(240&n[0])>>4,(15&n[0])<<4|(240&n[1])>>4,(15&n[1])<<4|(240&n[2])>>4,96|15&n[2],n[3],n[8],n[9],n[10],n[11],n[12],n[13],n[14],n[15]));var n;return"string"==typeof e?(0,o.unsafeStringify)(t):t}},591:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.URL=t.DNS=void 0;const r=n(338),o=n(988);var a=n(988);function l(e,t,n,a){return(0,o.default)(48,r.default,e,t,n,a)}Object.defineProperty(t,"DNS",{enumerable:!0,get:function(){return a.DNS}}),Object.defineProperty(t,"URL",{enumerable:!0,get:function(){return a.URL}}),l.DNS=o.DNS,l.URL=o.URL,t.default=l},697:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-8][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$/i},702:(e,t,n)=>{"use strict";n.r(t)},740:(e,t,n)=>{"use strict";var r;Object.defineProperty(t,"__esModule",{value:!0}),t.ValveMpCompound=t.useValveContext=t.ValveContextProvider=void 0;const o=n(883),a=n(511),l=n(506),i=n(152),u=n(535),s=n(542).VALVE_COMPONENT_TYPE;r=(0,u.useCreateContext)("ValveMpCompound"),t.ValveContextProvider=r[0],t.useValveContext=r[1],t.ValveMpCompound={Root:({componentProps:e,valveProps:n,onActionPerformed:r,children:l})=>o.createElement(t.ValveContextProvider,{valveProps:n,componentProps:e,onActionPerformed:r,useValveReducer:a.useValveReducer},l),valve:()=>{var e;const{valveProps:n,onActionPerformed:r,componentProps:a}=(0,t.useValveContext)("Valve"),{position:u,emit:c}=a,{ValveStatus:f}=n,d=null!==(e=null==u?void 0:u.x)&&void 0!==e&&e;let v=l.valveMpItemNames;return(null==f?void 0:f.locate)||(v=v.slice(0,-1)),d?o.createElement("div",Object.assign({},c({classes:["hmi-component hmi-component-valve__mp "]}),{"data-component":s,onClick:r}),v.map((({value:e,index:t,key:n})=>(console.log(`re-rendered ,key ${n} value ${e} index ${t}`),o.createElement(i.default,{itemClassName:e+" "+(0,l.getValveMpItemClassName)(t,f),key:n}))))):o.createElement("div",Object.assign({},c({classes:["hmi-component hmi-component__column "]}),{"data-component":s,onClick:r}),o.createElement("div",{className:"hmi-component__row"},o.createElement("div",{className:"hmi-component-valve__mp"},v.map((({value:e,index:t,key:n})=>(console.log(`re-rendered ,key ${n} value ${e} index ${t}`),o.createElement(i.default,{itemClassName:e+" "+(0,l.getValveMpItemClassName)(t,f),key:n})))))))}}},746:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=n(697);t.default=function(e){return"string"==typeof e&&r.default.test(e)}},770:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=n(746);t.default=function(e){if(!(0,r.default)(e))throw TypeError("Invalid UUID");return parseInt(e.slice(14,15),16)}},779:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n="undefined"!=typeof crypto&&crypto.randomUUID&&crypto.randomUUID.bind(crypto);t.default={randomUUID:n}},797:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=n(746);t.default=function(e){if(!(0,r.default)(e))throw TypeError("Invalid UUID");let t;return Uint8Array.of((t=parseInt(e.slice(0,8),16))>>>24,t>>>16&255,t>>>8&255,255&t,(t=parseInt(e.slice(9,13),16))>>>8,255&t,(t=parseInt(e.slice(14,18),16))>>>8,255&t,(t=parseInt(e.slice(19,23),16))>>>8,255&t,(t=parseInt(e.slice(24,36),16))/1099511627776&255,t/4294967296&255,t>>>24&255,t>>>16&255,t>>>8&255,255&t)}},829:(e,t)=>{"use strict";function n(e,t,n,r){switch(e){case 0:return t&n^~t&r;case 1:case 3:return t^n^r;case 2:return t&n^t&r^n&r}}function r(e,t){return e<<t|e>>>32-t}Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){const t=[1518500249,1859775393,2400959708,3395469782],o=[1732584193,4023233417,2562383102,271733878,3285377520],a=new Uint8Array(e.length+1);a.set(e),a[e.length]=128;const l=(e=a).length/4+2,i=Math.ceil(l/16),u=new Array(i);for(let t=0;t<i;++t){const n=new Uint32Array(16);for(let r=0;r<16;++r)n[r]=e[64*t+4*r]<<24|e[64*t+4*r+1]<<16|e[64*t+4*r+2]<<8|e[64*t+4*r+3];u[t]=n}u[i-1][14]=8*(e.length-1)/Math.pow(2,32),u[i-1][14]=Math.floor(u[i-1][14]),u[i-1][15]=8*(e.length-1)&4294967295;for(let e=0;e<i;++e){const a=new Uint32Array(80);for(let t=0;t<16;++t)a[t]=u[e][t];for(let e=16;e<80;++e)a[e]=r(a[e-3]^a[e-8]^a[e-14]^a[e-16],1);let l=o[0],i=o[1],s=o[2],c=o[3],f=o[4];for(let e=0;e<80;++e){const o=Math.floor(e/20),u=r(l,5)+n(o,i,s,c)+f+t[o]+a[e]>>>0;f=c,c=s,s=r(i,30)>>>0,i=l,l=u}o[0]=o[0]+l>>>0,o[1]=o[1]+i>>>0,o[2]=o[2]+s>>>0,o[3]=o[3]+c>>>0,o[4]=o[4]+f>>>0}return Uint8Array.of(o[0]>>24,o[0]>>16,o[0]>>8,o[0],o[1]>>24,o[1]>>16,o[1]>>8,o[1],o[2]>>24,o[2]>>16,o[2]>>8,o[2],o[3]>>24,o[3]>>16,o[3]>>8,o[3],o[4]>>24,o[4]>>16,o[4]>>8,o[4])}},838:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ParameterListComponentMeta=t.ParameterListComponent=t.COMPONENT_TYPE=void 0;const r=n(883);t.COMPONENT_TYPE="hmi.input.ParameterList",t.ParameterListComponent=e=>{const{state:t,reducer:n}=e.props;t.map(((e,t)=>{const{label:o,input:a}=e,{updateValue:l}=n.reducer;return r.createElement("label",{className:"field"},r.createElement("span",{className:"label"},o.text),r.createElement("input",{type:"text",inputMode:"numeric",pattern:"[0-9]*",placeholder:null==a?void 0:a.placeholder,onChange:e=>{console.log(e),l(parseFloat(parseFloat(e.target.value).toFixed(2)),t)}}))}))},t.ParameterListComponentMeta=class{getComponentType(){return t.COMPONENT_TYPE}getDefaultSize(){return{width:120,height:240}}getPropsReducer(e){return e.read("parameters",[])}getViewComponent(){return t.ParameterListComponent}}},883:e=>{"use strict";e.exports=t},973:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ValveMeta=t.Valve=t.COMPONENT_TYPE=void 0;const r=n(883),o=n(377),a=n(740),l=n(390);t.COMPONENT_TYPE="hmi.process_objects.Valve";class i extends o.Component{constructor(){super(...arguments),this.valveStatus=this.props.props.ValveStatus||l.valveStatus,this.onActionPerformed=()=>{this.props.eventsEnabled?(console.log("Valve clicked!"),this.props.componentEvents.fireComponentEvent("onActionPerformed",{})):console.log("Valve is disabled in the design-scope")}}componentDidMount(){}render(){return r.createElement(a.ValveMpCompound.Root,{componentProps:this.props,valveProps:this.props.props,onActionPerformed:this.onActionPerformed},r.createElement(a.ValveMpCompound.valve,null))}}t.Valve=i,t.ValveMeta=class{getComponentType(){return t.COMPONENT_TYPE}getViewComponent(){return i}getDefaultSize(){return{width:24,height:48}}getPropsReducer(e){return console.log("ValveStatus",e.read("ValveStatus")),{ValveStatus:{alarm:e.readBoolean("ValveStatus.Alarm",!1),actFB:e.readBoolean("ValveStatus.ActFB",!1),deActFB:e.readBoolean("ValveStatus.DeActFB",!1),activatedConfig:e.readNumber("ValveStatus.ActivatedConfig",6),deactivatedConfig:e.readNumber("ValveStatus.DeactivatedConfig",0),tagName:e.readString("ValveStatus.TagName",""),manual:e.readBoolean("ValveStatus.Manual",!1),masked:e.readBoolean("ValveStatus.Masked",!1),changing:e.readBoolean("ValveStatus.Changing",!1),locate:e.readBoolean("ValveStatus.Locate",!1),usl:e.readBoolean("ValveStatus.usl",!1),lsl:e.readBoolean("ValveStatus.lsl",!1)},showItemId:e.readBoolean("ItemId",!1)}}}},988:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.URL=t.DNS=t.stringToBytes=void 0;const r=n(797),o=n(11);function a(e){e=unescape(encodeURIComponent(e));const t=new Uint8Array(e.length);for(let n=0;n<e.length;++n)t[n]=e.charCodeAt(n);return t}t.stringToBytes=a,t.DNS="6ba7b810-9dad-11d1-80b4-00c04fd430c8",t.URL="6ba7b811-9dad-11d1-80b4-00c04fd430c8",t.default=function(e,t,n,l,i,u){const s="string"==typeof n?a(n):n,c="string"==typeof l?(0,r.default)(l):l;if("string"==typeof l&&(l=(0,r.default)(l)),16!==l?.length)throw TypeError("Namespace must be array-like (16 iterable integer values, 0-255)");let f=new Uint8Array(16+s.length);if(f.set(c),f.set(s,c.length),f=t(f),f[6]=15&f[6]|e,f[8]=63&f[8]|128,i){u=u||0;for(let e=0;e<16;++e)i[u+e]=f[e];return i}return(0,o.unsafeStringify)(f)}}},r={};function o(e){var t=r[e];if(void 0!==t)return t.exports;var a=r[e]={exports:{}};return n[e].call(a.exports,a,a.exports,o),a.exports}o.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var a={};return(()=>{"use strict";var e=a;Object.defineProperty(e,"__esModule",{value:!0}),e.ParameterListComponent=e.Valve=void 0;const t=o(377),n=o(973);Object.defineProperty(e,"Valve",{enumerable:!0,get:function(){return n.Valve}});const r=o(838);Object.defineProperty(e,"ParameterListComponent",{enumerable:!0,get:function(){return r.ParameterListComponent}}),o(702),[new n.ValveMeta,new r.ParameterListComponentMeta].forEach((e=>t.ComponentRegistry.register(e)))})(),a})()));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,