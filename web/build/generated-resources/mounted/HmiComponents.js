!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t(require("PerspectiveClient"),require("React")):"function"==typeof define&&define.amd?define("HmiComponents",["PerspectiveClient","React"],t):"object"==typeof exports?exports.HmiComponents=t(require("PerspectiveClient"),require("React")):e.HmiComponents=t(e.PerspectiveClient,e.React)}(self,((e,t)=>(()=>{var n={11:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.unsafeStringify=void 0;const r=n(746),a=[];for(let e=0;e<256;++e)a.push((e+256).toString(16).slice(1));function o(e,t=0){return(a[e[t+0]]+a[e[t+1]]+a[e[t+2]]+a[e[t+3]]+"-"+a[e[t+4]]+a[e[t+5]]+"-"+a[e[t+6]]+a[e[t+7]]+"-"+a[e[t+8]]+a[e[t+9]]+"-"+a[e[t+10]]+a[e[t+11]]+a[e[t+12]]+a[e[t+13]]+a[e[t+14]]+a[e[t+15]]).toLowerCase()}t.unsafeStringify=o,t.default=function(e,t=0){const n=o(e,t);if(!(0,r.default)(n))throw TypeError("Stringified UUID is invalid");return n}},124:e=>{"use strict";var t,n=Object.defineProperty,r=Object.getOwnPropertyDescriptor,a=Object.getOwnPropertyNames,o=Object.prototype.hasOwnProperty,l={};((e,t)=>{for(var r in t)n(e,r,{get:t[r],enumerable:!0})})(l,{Immer:()=>H,applyPatches:()=>le,castDraft:()=>se,castImmutable:()=>ce,createDraft:()=>ie,current:()=>J,enableMapSet:()=>ee,enablePatches:()=>Z,finishDraft:()=>ue,freeze:()=>E,immerable:()=>u,isDraft:()=>d,isDraftable:()=>p,nothing:()=>i,original:()=>b,produce:()=>ne,produceWithPatches:()=>re,setAutoFreeze:()=>ae,setUseStrictShallowCopy:()=>oe}),e.exports=(t=l,((e,t,l,i)=>{if(t&&"object"==typeof t||"function"==typeof t)for(let l of a(t))!o.call(e,l)&&undefined!==l&&n(e,l,{get:()=>t[l],enumerable:!(i=r(t,l))||i.enumerable});return e})(n({},"__esModule",{value:!0}),t));var i=Symbol.for("immer-nothing"),u=Symbol.for("immer-draftable"),s=Symbol.for("immer-state");function c(e,...t){throw new Error(`[Immer] minified error nr: ${e}. Full error at: https://bit.ly/3cXEKWf`)}var f=Object.getPrototypeOf;function d(e){return!!e&&!!e[s]}function p(e){return!!e&&(v(e)||Array.isArray(e)||!!e[u]||!!e.constructor?.[u]||O(e)||_(e))}var m=Object.prototype.constructor.toString();function v(e){if(!e||"object"!=typeof e)return!1;let t=f(e);if(null===t)return!0;let n=Object.hasOwnProperty.call(t,"constructor")&&t.constructor;return n===Object||"function"==typeof n&&Function.toString.call(n)===m}function b(e){return d(e)||c(15),e[s].t}function h(e,t){0===y(e)?Reflect.ownKeys(e).forEach((n=>{t(n,e[n],e)})):e.forEach(((n,r)=>t(r,n,e)))}function y(e){let t=e[s];return t?t.o:Array.isArray(e)?1:O(e)?2:_(e)?3:0}function g(e,t){return 2===y(e)?e.has(t):Object.prototype.hasOwnProperty.call(e,t)}function P(e,t){return 2===y(e)?e.get(t):e[t]}function A(e,t,n){let r=y(e);2===r?e.set(t,n):3===r?e.add(n):e[t]=n}function O(e){return e instanceof Map}function _(e){return e instanceof Set}function M(e){return e.e||e.t}function w(e,t){if(O(e))return new Map(e);if(_(e))return new Set(e);if(Array.isArray(e))return Array.prototype.slice.call(e);let n=v(e);if(!0===t||"class_only"===t&&!n){let t=Object.getOwnPropertyDescriptors(e);delete t[s];let n=Reflect.ownKeys(t);for(let r=0;r<n.length;r++){let a=n[r],o=t[a];!1===o.writable&&(o.writable=!0,o.configurable=!0),(o.get||o.set)&&(t[a]={configurable:!0,writable:!0,enumerable:o.enumerable,value:e[a]})}return Object.create(f(e),t)}{let t=f(e);if(null!==t&&n)return{...e};let r=Object.create(t);return Object.assign(r,e)}}function E(e,t=!1){return S(e)||d(e)||!p(e)||(y(e)>1&&(e.set=e.add=e.clear=e.delete=N),Object.freeze(e),t&&Object.entries(e).forEach((([e,t])=>E(t,!0)))),e}function N(){c(2)}function S(e){return Object.isFrozen(e)}var C,V={};function j(e){let t=V[e];return t||c(0),t}function U(e,t){V[e]||(V[e]=t)}function I(){return C}function D(e,t){t&&(j("Patches"),e.f=[],e.h=[],e.b=t)}function T(e){x(e),e.a.forEach(k),e.a=null}function x(e){e===C&&(C=e.i)}function L(e){return C=function(e,t){return{a:[],i:e,p:t,P:!0,d:0}}(C,e)}function k(e){let t=e[s];0===t.o||1===t.o?t.x():t.m=!0}function B(e,t){t.d=t.a.length;let n=t.a[0];return void 0!==e&&e!==n?(n[s].s&&(T(t),c(4)),p(e)&&(e=R(t,e),t.i||z(t,e)),t.f&&j("Patches").T(n[s].t,e,t.f,t.h)):e=R(t,n,[]),T(t),t.f&&t.b(t.f,t.h),e!==i?e:void 0}function R(e,t,n){if(S(t))return t;let r=t[s];if(!r)return h(t,((a,o)=>F(e,r,t,a,o,n))),t;if(r.n!==e)return t;if(!r.s)return z(e,r.t,!0),r.t;if(!r.c){r.c=!0,r.n.d--;let t=r.e,a=t,o=!1;3===r.o&&(a=new Set(t),t.clear(),o=!0),h(a,((a,l)=>F(e,r,t,a,l,n,o))),z(e,t,!1),n&&e.f&&j("Patches").g(r,n,e.f,e.h)}return r.e}function F(e,t,n,r,a,o,l){if(d(a)){let l=R(e,a,o&&t&&3!==t.o&&!g(t.r,r)?o.concat(r):void 0);if(A(n,r,l),!d(l))return;e.P=!1}else l&&n.add(a);if(p(a)&&!S(a)){if(!e.p.y&&e.d<1)return;R(e,a),(!t||!t.n.i)&&"symbol"!=typeof r&&Object.prototype.propertyIsEnumerable.call(n,r)&&z(e,a)}}function z(e,t,n=!1){!e.i&&e.p.y&&e.P&&E(t,n)}var $={get(e,t){if(t===s)return e;let n=M(e);if(!g(n,t))return function(e,t,n){let r=G(t,n);return r?"value"in r?r.value:r.get?.call(e.u):void 0}(e,n,t);let r=n[t];return e.c||!p(r)?r:r===Y(e.t,t)?(X(e),e.e[t]=W(r,e)):r},has:(e,t)=>t in M(e),ownKeys:e=>Reflect.ownKeys(M(e)),set(e,t,n){let r=G(M(e),t);if(r?.set)return r.set.call(e.u,n),!0;if(!e.s){let r=Y(M(e),t),a=r?.[s];if(a&&a.t===n)return e.e[t]=n,e.r[t]=!1,!0;if(function(e,t){return e===t?0!==e||1/e==1/t:e!=e&&t!=t}(n,r)&&(void 0!==n||g(e.t,t)))return!0;X(e),K(e)}return e.e[t]===n&&(void 0!==n||t in e.e)||Number.isNaN(n)&&Number.isNaN(e.e[t])||(e.e[t]=n,e.r[t]=!0),!0},deleteProperty:(e,t)=>(void 0!==Y(e.t,t)||t in e.t?(e.r[t]=!1,X(e),K(e)):delete e.r[t],e.e&&delete e.e[t],!0),getOwnPropertyDescriptor(e,t){let n=M(e),r=Reflect.getOwnPropertyDescriptor(n,t);return r&&{writable:!0,configurable:1!==e.o||"length"!==t,enumerable:r.enumerable,value:n[t]}},defineProperty(){c(11)},getPrototypeOf:e=>f(e.t),setPrototypeOf(){c(12)}},q={};function Y(e,t){let n=e[s];return(n?M(n):e)[t]}function G(e,t){if(!(t in e))return;let n=f(e);for(;n;){let e=Object.getOwnPropertyDescriptor(n,t);if(e)return e;n=f(n)}}function K(e){e.s||(e.s=!0,e.i&&K(e.i))}function X(e){e.e||(e.e=w(e.t,e.n.p.S))}h($,((e,t)=>{q[e]=function(){return arguments[0]=arguments[0][0],t.apply(this,arguments)}})),q.deleteProperty=function(e,t){return q.set.call(this,e,t,void 0)},q.set=function(e,t,n){return $.set.call(this,e[0],t,n,e[0])};var H=class{constructor(e){this.y=!0,this.S=!1,this.produce=(e,t,n)=>{if("function"==typeof e&&"function"!=typeof t){let n=t;t=e;let r=this;return function(e=n,...a){return r.produce(e,(e=>t.call(this,e,...a)))}}let r;if("function"!=typeof t&&c(6),void 0!==n&&"function"!=typeof n&&c(7),p(e)){let a=L(this),o=W(e,void 0),l=!0;try{r=t(o),l=!1}finally{l?T(a):x(a)}return D(a,n),B(r,a)}if(!e||"object"!=typeof e){if(r=t(e),void 0===r&&(r=e),r===i&&(r=void 0),this.y&&E(r,!0),n){let t=[],a=[];j("Patches").T(e,r,t,a),n(t,a)}return r}c(1)},this.produceWithPatches=(e,t)=>{if("function"==typeof e)return(t,...n)=>this.produceWithPatches(t,(t=>e(t,...n)));let n,r;return[this.produce(e,t,((e,t)=>{n=e,r=t})),n,r]},"boolean"==typeof e?.autoFreeze&&this.setAutoFreeze(e.autoFreeze),"boolean"==typeof e?.useStrictShallowCopy&&this.setUseStrictShallowCopy(e.useStrictShallowCopy)}createDraft(e){p(e)||c(8),d(e)&&(e=J(e));let t=L(this),n=W(e,void 0);return n[s].l=!0,x(t),n}finishDraft(e,t){let n=e&&e[s];(!n||!n.l)&&c(9);let{n:r}=n;return D(r,t),B(void 0,r)}setAutoFreeze(e){this.y=e}setUseStrictShallowCopy(e){this.S=e}applyPatches(e,t){let n;for(n=t.length-1;n>=0;n--){let r=t[n];if(0===r.path.length&&"replace"===r.op){e=r.value;break}}n>-1&&(t=t.slice(n+1));let r=j("Patches").A;return d(e)?r(e,t):this.produce(e,(e=>r(e,t)))}};function W(e,t){let n=O(e)?j("MapSet").I(e,t):_(e)?j("MapSet").D(e,t):function(e,t){let n=Array.isArray(e),r={o:n?1:0,n:t?t.n:I(),s:!1,c:!1,r:{},i:t,t:e,u:null,e:null,x:null,l:!1},a=r,o=$;n&&(a=[r],o=q);let{revoke:l,proxy:i}=Proxy.revocable(a,o);return r.u=i,r.x=l,i}(e,t);return(t?t.n:I()).a.push(n),n}function J(e){return d(e)||c(10),Q(e)}function Q(e){if(!p(e)||S(e))return e;let t,n=e[s];if(n){if(!n.s)return n.t;n.c=!0,t=w(e,n.n.p.S)}else t=w(e,!0);return h(t,((e,n)=>{A(t,e,Q(n))})),n&&(n.c=!1),t}function Z(){let e="replace",t="add",n="remove";function r(e){if(!p(e))return e;if(Array.isArray(e))return e.map(r);if(O(e))return new Map(Array.from(e.entries()).map((([e,t])=>[e,r(t)])));if(_(e))return new Set(Array.from(e).map(r));let t=Object.create(f(e));for(let n in e)t[n]=r(e[n]);return g(e,u)&&(t[u]=e[u]),t}function a(e){return d(e)?r(e):e}U("Patches",{A:function(a,o){return o.forEach((o=>{let{path:l,op:i}=o,u=a;for(let e=0;e<l.length-1;e++){let t=y(u),n=l[e];"string"!=typeof n&&"number"!=typeof n&&(n=""+n),(0===t||1===t)&&("__proto__"===n||"constructor"===n)&&c(19),"function"==typeof u&&"prototype"===n&&c(19),u=P(u,n),"object"!=typeof u&&c(18,l.join("/"))}let s=y(u),f=r(o.value),d=l[l.length-1];switch(i){case e:switch(s){case 2:return u.set(d,f);case 3:c(16);default:return u[d]=f}case t:switch(s){case 1:return"-"===d?u.push(f):u.splice(d,0,f);case 2:return u.set(d,f);case 3:return u.add(f);default:return u[d]=f}case n:switch(s){case 1:return u.splice(d,1);case 2:return u.delete(d);case 3:return u.delete(o.value);default:return delete u[d]}default:c(17)}})),a},g:function(r,o,l,i){switch(r.o){case 0:case 2:return function(r,o,l,i){let{t:u,e:s}=r;h(r.r,((r,c)=>{let f=P(u,r),d=P(s,r),p=c?g(u,r)?e:t:n;if(f===d&&p===e)return;let m=o.concat(r);l.push(p===n?{op:p,path:m}:{op:p,path:m,value:d}),i.push(p===t?{op:n,path:m}:p===n?{op:t,path:m,value:a(f)}:{op:e,path:m,value:a(f)})}))}(r,o,l,i);case 1:return function(r,o,l,i){let{t:u,r:s}=r,c=r.e;c.length<u.length&&([u,c]=[c,u],[l,i]=[i,l]);for(let t=0;t<u.length;t++)if(s[t]&&c[t]!==u[t]){let n=o.concat([t]);l.push({op:e,path:n,value:a(c[t])}),i.push({op:e,path:n,value:a(u[t])})}for(let e=u.length;e<c.length;e++){let n=o.concat([e]);l.push({op:t,path:n,value:a(c[e])})}for(let e=c.length-1;u.length<=e;--e){let t=o.concat([e]);i.push({op:n,path:t})}}(r,o,l,i);case 3:return function(e,r,a,o){let{t:l,e:i}=e,u=0;l.forEach((e=>{if(!i.has(e)){let l=r.concat([u]);a.push({op:n,path:l,value:e}),o.unshift({op:t,path:l,value:e})}u++})),u=0,i.forEach((e=>{if(!l.has(e)){let l=r.concat([u]);a.push({op:t,path:l,value:e}),o.unshift({op:n,path:l,value:e})}u++}))}(r,o,l,i)}},T:function(t,n,r,a){r.push({op:e,path:[],value:n===i?void 0:n}),a.push({op:e,path:[],value:t})}})}function ee(){class e extends Map{constructor(e,t){super(),this[s]={o:2,i:t,n:t?t.n:I(),s:!1,c:!1,e:void 0,r:void 0,t:e,u:this,l:!1,m:!1}}get size(){return M(this[s]).size}has(e){return M(this[s]).has(e)}set(e,n){let r=this[s];return a(r),(!M(r).has(e)||M(r).get(e)!==n)&&(t(r),K(r),r.r.set(e,!0),r.e.set(e,n),r.r.set(e,!0)),this}delete(e){if(!this.has(e))return!1;let n=this[s];return a(n),t(n),K(n),n.t.has(e)?n.r.set(e,!1):n.r.delete(e),n.e.delete(e),!0}clear(){let e=this[s];a(e),M(e).size&&(t(e),K(e),e.r=new Map,h(e.t,(t=>{e.r.set(t,!1)})),e.e.clear())}forEach(e,t){M(this[s]).forEach(((n,r,a)=>{e.call(t,this.get(r),r,this)}))}get(e){let n=this[s];a(n);let r=M(n).get(e);if(n.c||!p(r)||r!==n.t.get(e))return r;let o=W(r,n);return t(n),n.e.set(e,o),o}keys(){return M(this[s]).keys()}values(){let e=this.keys();return{[Symbol.iterator]:()=>this.values(),next:()=>{let t=e.next();return t.done?t:{done:!1,value:this.get(t.value)}}}}entries(){let e=this.keys();return{[Symbol.iterator]:()=>this.entries(),next:()=>{let t=e.next();if(t.done)return t;let n=this.get(t.value);return{done:!1,value:[t.value,n]}}}}[Symbol.iterator](){return this.entries()}}function t(e){e.e||(e.r=new Map,e.e=new Map(e.t))}class n extends Set{constructor(e,t){super(),this[s]={o:3,i:t,n:t?t.n:I(),s:!1,c:!1,e:void 0,t:e,u:this,a:new Map,m:!1,l:!1}}get size(){return M(this[s]).size}has(e){let t=this[s];return a(t),t.e?!!(t.e.has(e)||t.a.has(e)&&t.e.has(t.a.get(e))):t.t.has(e)}add(e){let t=this[s];return a(t),this.has(e)||(r(t),K(t),t.e.add(e)),this}delete(e){if(!this.has(e))return!1;let t=this[s];return a(t),r(t),K(t),t.e.delete(e)||!!t.a.has(e)&&t.e.delete(t.a.get(e))}clear(){let e=this[s];a(e),M(e).size&&(r(e),K(e),e.e.clear())}values(){let e=this[s];return a(e),r(e),e.e.values()}entries(){let e=this[s];return a(e),r(e),e.e.entries()}keys(){return this.values()}[Symbol.iterator](){return this.values()}forEach(e,t){let n=this.values(),r=n.next();for(;!r.done;)e.call(t,r.value,r.value,this),r=n.next()}}function r(e){e.e||(e.e=new Set,e.t.forEach((t=>{if(p(t)){let n=W(t,e);e.a.set(t,n),e.e.add(n)}else e.e.add(t)})))}function a(e){e.m&&c(3,JSON.stringify(M(e)))}U("MapSet",{I:function(t,n){return new e(t,n)},D:function(e,t){return new n(e,t)}})}var te=new H,ne=te.produce,re=te.produceWithPatches.bind(te),ae=te.setAutoFreeze.bind(te),oe=te.setUseStrictShallowCopy.bind(te),le=te.applyPatches.bind(te),ie=te.createDraft.bind(te),ue=te.finishDraft.bind(te);function se(e){return e}function ce(e){return e}},152:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=n(883),a=({itemClassName:e,handleClick:t})=>r.createElement("div",{className:e,onClick:t});a.displayName="Item",t.default=a},182:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.version=t.validate=t.v7=t.v6ToV1=t.v6=t.v5=t.v4=t.v3=t.v1ToV6=t.v1=t.stringify=t.parse=t.NIL=t.MAX=void 0;var r=n(196);Object.defineProperty(t,"MAX",{enumerable:!0,get:function(){return r.default}});var a=n(465);Object.defineProperty(t,"NIL",{enumerable:!0,get:function(){return a.default}});var o=n(797);Object.defineProperty(t,"parse",{enumerable:!0,get:function(){return o.default}});var l=n(11);Object.defineProperty(t,"stringify",{enumerable:!0,get:function(){return l.default}});var i=n(425);Object.defineProperty(t,"v1",{enumerable:!0,get:function(){return i.default}});var u=n(568);Object.defineProperty(t,"v1ToV6",{enumerable:!0,get:function(){return u.default}});var s=n(591);Object.defineProperty(t,"v3",{enumerable:!0,get:function(){return s.default}});var c=n(286);Object.defineProperty(t,"v4",{enumerable:!0,get:function(){return c.default}});var f=n(557);Object.defineProperty(t,"v5",{enumerable:!0,get:function(){return f.default}});var d=n(356);Object.defineProperty(t,"v6",{enumerable:!0,get:function(){return d.default}});var p=n(268);Object.defineProperty(t,"v6ToV1",{enumerable:!0,get:function(){return p.default}});var m=n(299);Object.defineProperty(t,"v7",{enumerable:!0,get:function(){return m.default}});var v=n(746);Object.defineProperty(t,"validate",{enumerable:!0,get:function(){return v.default}});var b=n(770);Object.defineProperty(t,"version",{enumerable:!0,get:function(){return b.default}})},196:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default="ffffffff-ffff-ffff-ffff-ffffffffffff"},268:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=n(797),a=n(11);t.default=function(e){const t=(n="string"==typeof e?(0,r.default)(e):e,Uint8Array.of((15&n[3])<<4|n[4]>>4&15,(15&n[4])<<4|(240&n[5])>>4,(15&n[5])<<4|15&n[6],n[7],(15&n[1])<<4|(240&n[2])>>4,(15&n[2])<<4|(240&n[3])>>4,16|(240&n[0])>>4,(15&n[0])<<4|(240&n[1])>>4,n[8],n[9],n[10],n[11],n[12],n[13],n[14],n[15]));var n;return"string"==typeof e?(0,a.unsafeStringify)(t):t}},286:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=n(779),a=n(291),o=n(11);t.default=function(e,t,n){if(r.default.randomUUID&&!t&&!e)return r.default.randomUUID();const l=(e=e||{}).random??e.rng?.()??(0,a.default)();if(l.length<16)throw new Error("Random bytes length must be >= 16");if(l[6]=15&l[6]|64,l[8]=63&l[8]|128,t){if((n=n||0)<0||n+16>t.length)throw new RangeError(`UUID byte range ${n}:${n+15} is out of buffer bounds`);for(let e=0;e<16;++e)t[n+e]=l[e];return t}return(0,o.unsafeStringify)(l)}},291:(e,t)=>{"use strict";let n;Object.defineProperty(t,"__esModule",{value:!0});const r=new Uint8Array(16);t.default=function(){if(!n){if("undefined"==typeof crypto||!crypto.getRandomValues)throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");n=crypto.getRandomValues.bind(crypto)}return n(r)}},299:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.updateV7State=void 0;const r=n(291),a=n(11),o={};function l(e,t,n){return e.msecs??=-1/0,e.seq??=0,t>e.msecs?(e.seq=n[6]<<23|n[7]<<16|n[8]<<8|n[9],e.msecs=t):(e.seq=e.seq+1|0,0===e.seq&&e.msecs++),e}function i(e,t,n,r,a=0){if(e.length<16)throw new Error("Random bytes length must be >= 16");if(r){if(a<0||a+16>r.length)throw new RangeError(`UUID byte range ${a}:${a+15} is out of buffer bounds`)}else r=new Uint8Array(16),a=0;return t??=Date.now(),n??=127*e[6]<<24|e[7]<<16|e[8]<<8|e[9],r[a++]=t/1099511627776&255,r[a++]=t/4294967296&255,r[a++]=t/16777216&255,r[a++]=t/65536&255,r[a++]=t/256&255,r[a++]=255&t,r[a++]=112|n>>>28&15,r[a++]=n>>>20&255,r[a++]=128|n>>>14&63,r[a++]=n>>>6&255,r[a++]=n<<2&255|3&e[10],r[a++]=e[11],r[a++]=e[12],r[a++]=e[13],r[a++]=e[14],r[a++]=e[15],r}t.updateV7State=l,t.default=function(e,t,n){let u;if(e)u=i(e.random??e.rng?.()??(0,r.default)(),e.msecs,e.seq,t,n);else{const e=Date.now(),a=(0,r.default)();l(o,e,a),u=i(a,o.msecs,o.seq,t,n)}return t??(0,a.unsafeStringify)(u)}},338:(e,t)=>{"use strict";function n(e){return 14+(e+64>>>9<<4)+1}function r(e,t){const n=(65535&e)+(65535&t);return(e>>16)+(t>>16)+(n>>16)<<16|65535&n}function a(e,t,n,a,o,l){return r((i=r(r(t,e),r(a,l)))<<(u=o)|i>>>32-u,n);var i,u}function o(e,t,n,r,o,l,i){return a(t&n|~t&r,e,t,o,l,i)}function l(e,t,n,r,o,l,i){return a(t&r|n&~r,e,t,o,l,i)}function i(e,t,n,r,o,l,i){return a(t^n^r,e,t,o,l,i)}function u(e,t,n,r,o,l,i){return a(n^(t|~r),e,t,o,l,i)}Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return function(e){const t=new Uint8Array(4*e.length);for(let n=0;n<4*e.length;n++)t[n]=e[n>>2]>>>n%4*8&255;return t}(function(e,t){const a=new Uint32Array(n(t)).fill(0);a.set(e),a[t>>5]|=128<<t%32,a[a.length-1]=t,e=a;let s=1732584193,c=-271733879,f=-1732584194,d=271733878;for(let t=0;t<e.length;t+=16){const n=s,a=c,p=f,m=d;s=o(s,c,f,d,e[t],7,-680876936),d=o(d,s,c,f,e[t+1],12,-389564586),f=o(f,d,s,c,e[t+2],17,606105819),c=o(c,f,d,s,e[t+3],22,-1044525330),s=o(s,c,f,d,e[t+4],7,-176418897),d=o(d,s,c,f,e[t+5],12,1200080426),f=o(f,d,s,c,e[t+6],17,-1473231341),c=o(c,f,d,s,e[t+7],22,-45705983),s=o(s,c,f,d,e[t+8],7,1770035416),d=o(d,s,c,f,e[t+9],12,-1958414417),f=o(f,d,s,c,e[t+10],17,-42063),c=o(c,f,d,s,e[t+11],22,-1990404162),s=o(s,c,f,d,e[t+12],7,1804603682),d=o(d,s,c,f,e[t+13],12,-40341101),f=o(f,d,s,c,e[t+14],17,-1502002290),c=o(c,f,d,s,e[t+15],22,1236535329),s=l(s,c,f,d,e[t+1],5,-165796510),d=l(d,s,c,f,e[t+6],9,-1069501632),f=l(f,d,s,c,e[t+11],14,643717713),c=l(c,f,d,s,e[t],20,-373897302),s=l(s,c,f,d,e[t+5],5,-701558691),d=l(d,s,c,f,e[t+10],9,38016083),f=l(f,d,s,c,e[t+15],14,-660478335),c=l(c,f,d,s,e[t+4],20,-405537848),s=l(s,c,f,d,e[t+9],5,568446438),d=l(d,s,c,f,e[t+14],9,-1019803690),f=l(f,d,s,c,e[t+3],14,-187363961),c=l(c,f,d,s,e[t+8],20,1163531501),s=l(s,c,f,d,e[t+13],5,-1444681467),d=l(d,s,c,f,e[t+2],9,-51403784),f=l(f,d,s,c,e[t+7],14,1735328473),c=l(c,f,d,s,e[t+12],20,-1926607734),s=i(s,c,f,d,e[t+5],4,-378558),d=i(d,s,c,f,e[t+8],11,-2022574463),f=i(f,d,s,c,e[t+11],16,1839030562),c=i(c,f,d,s,e[t+14],23,-35309556),s=i(s,c,f,d,e[t+1],4,-1530992060),d=i(d,s,c,f,e[t+4],11,1272893353),f=i(f,d,s,c,e[t+7],16,-155497632),c=i(c,f,d,s,e[t+10],23,-1094730640),s=i(s,c,f,d,e[t+13],4,681279174),d=i(d,s,c,f,e[t],11,-358537222),f=i(f,d,s,c,e[t+3],16,-722521979),c=i(c,f,d,s,e[t+6],23,76029189),s=i(s,c,f,d,e[t+9],4,-640364487),d=i(d,s,c,f,e[t+12],11,-421815835),f=i(f,d,s,c,e[t+15],16,530742520),c=i(c,f,d,s,e[t+2],23,-995338651),s=u(s,c,f,d,e[t],6,-198630844),d=u(d,s,c,f,e[t+7],10,1126891415),f=u(f,d,s,c,e[t+14],15,-1416354905),c=u(c,f,d,s,e[t+5],21,-57434055),s=u(s,c,f,d,e[t+12],6,1700485571),d=u(d,s,c,f,e[t+3],10,-1894986606),f=u(f,d,s,c,e[t+10],15,-1051523),c=u(c,f,d,s,e[t+1],21,-2054922799),s=u(s,c,f,d,e[t+8],6,1873313359),d=u(d,s,c,f,e[t+15],10,-30611744),f=u(f,d,s,c,e[t+6],15,-1560198380),c=u(c,f,d,s,e[t+13],21,1309151649),s=u(s,c,f,d,e[t+4],6,-145523070),d=u(d,s,c,f,e[t+11],10,-1120210379),f=u(f,d,s,c,e[t+2],15,718787259),c=u(c,f,d,s,e[t+9],21,-343485551),s=r(s,n),c=r(c,a),f=r(f,p),d=r(d,m)}return Uint32Array.of(s,c,f,d)}(function(e){if(0===e.length)return new Uint32Array;const t=new Uint32Array(n(8*e.length)).fill(0);for(let n=0;n<e.length;n++)t[n>>2]|=(255&e[n])<<n%4*8;return t}(e),8*e.length))}},348:(e,t,n)=>{var r=n(407),a=n(883);t.useImmer=function(e){var t=a.useState((function(){return r.freeze("function"==typeof e?e():e,!0)})),n=t[1];return[t[0],a.useCallback((function(e){n("function"==typeof e?r.produce(e):r.freeze(e))}),[])]},t.useImmerReducer=function(e,t,n){var o=a.useMemo((function(){return r.produce(e)}),[e]);return a.useReducer(o,t,n)}},356:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=n(11),a=n(425),o=n(568);t.default=function(e,t,n){e??={},n??=0;let l=(0,a.default)({...e,_v6:!0},new Uint8Array(16));if(l=(0,o.default)(l),t){for(let e=0;e<16;e++)t[n+e]=l[e];return t}return(0,r.unsafeStringify)(l)}},377:t=>{"use strict";t.exports=e},390:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.initialControlState=t.initialOffOnState=t.initialAutoManState=t.parameterInitialState=t.valveProps=t.processObjectProps=t.valveStatus=void 0,t.valveStatus={alarm:!1,actFB:!1,deActFB:!0,activatedConfig:7,deactivatedConfig:5,itemName:"VXXX",manual:!1,masked:!1,changing:!1,locate:!1},t.processObjectProps={status:t.valveStatus},t.valveProps={processObject:t.processObjectProps,handleClick:()=>{console.log("Valve clicked")},labelPosition:"left",showLabel:!1},t.parameterInitialState=[{label:{text:"label",className:"",tooltipText:"",tooltipPosition:"",tooltipClassName:"",tooltipId:""},input:{type:"text",inputmode:"numeric",placeholder:"Enter a number",editable:!0,pattern:"^[0-9]*[.,]?[0-9]*$",min:0,max:100,decimalPlaces:2,eu:"µC",value:0}}],t.initialAutoManState={auto:!0,manual:!1},t.initialOffOnState={off:!1,on:!1},t.initialControlState={security:{enabled:!1,accesslevel:0,userNames:["admin"],userRoles:["Administrator"]},interlocks:{main:[],upperSeat:[],lowerSeat:[]},main:{label:"Main",auto:!0,manual:!1,off:!0,on:!1},upperSeat:{label:"Upper Seat",off:!0,on:!1},lowerSeat:{label:"Lower Seat",off:!0,on:!1}}},407:(e,t,n)=>{"use strict";e.exports=n(124)},425:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.updateV1State=void 0;const r=n(291),a=n(11),o={};function l(e,t,n){return e.msecs??=-1/0,e.nsecs??=0,t===e.msecs?(e.nsecs++,e.nsecs>=1e4&&(e.node=void 0,e.nsecs=0)):t>e.msecs?e.nsecs=0:t<e.msecs&&(e.node=void 0),e.node||(e.node=n.slice(10,16),e.node[0]|=1,e.clockseq=16383&(n[8]<<8|n[9])),e.msecs=t,e}function i(e,t,n,r,a,o,l=0){if(e.length<16)throw new Error("Random bytes length must be >= 16");if(o){if(l<0||l+16>o.length)throw new RangeError(`UUID byte range ${l}:${l+15} is out of buffer bounds`)}else o=new Uint8Array(16),l=0;t??=Date.now(),n??=0,r??=16383&(e[8]<<8|e[9]),a??=e.slice(10,16);const i=(1e4*(268435455&(t+=122192928e5))+n)%4294967296;o[l++]=i>>>24&255,o[l++]=i>>>16&255,o[l++]=i>>>8&255,o[l++]=255&i;const u=t/4294967296*1e4&268435455;o[l++]=u>>>8&255,o[l++]=255&u,o[l++]=u>>>24&15|16,o[l++]=u>>>16&255,o[l++]=r>>>8|128,o[l++]=255&r;for(let e=0;e<6;++e)o[l++]=a[e];return o}t.updateV1State=l,t.default=function(e,t,n){let u;const s=e?._v6??!1;if(e){const t=Object.keys(e);1===t.length&&"_v6"===t[0]&&(e=void 0)}if(e)u=i(e.random??e.rng?.()??(0,r.default)(),e.msecs,e.nsecs,e.clockseq,e.node,t,n);else{const e=Date.now(),a=(0,r.default)();l(o,e,a),u=i(a,o.msecs,o.nsecs,s?void 0:o.clockseq,s?void 0:o.node,t,n)}return t??(0,a.unsafeStringify)(u)}},429:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getBoolAtIndex=void 0,t.getBoolAtIndex=(e,t)=>Boolean(e>>t&1)},465:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default="00000000-0000-0000-0000-000000000000"},506:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getItemIdPositionClassName=t.valveMpItemNames=t.itemNames=t.getValveMpItemClassName=t.getItemClassName=void 0;const r=n(429),a=n(542),o=n(182);t.getItemClassName=(e,t)=>{var n,a;let o="";const l=null!==(n=null==t?void 0:t.activatedConfig)&&void 0!==n?n:0,i=null!==(a=null==t?void 0:t.deactivatedConfig)&&void 0!==a?a:0;return o=e<12?(0,r.getBoolAtIndex)(l,e)&&(null==t?void 0:t.actFB)||(0,r.getBoolAtIndex)(i,e)&&(null==t?void 0:t.deActFB)?"show item":"hide item":14===e?"show":12===e||13===e?(0,r.getBoolAtIndex)(l,e)||(0,r.getBoolAtIndex)(i,e)?"show":"hide":15===e||16===e?(0,r.getBoolAtIndex)(l,12)||(0,r.getBoolAtIndex)(i,12)?"show":"hide":17===e?(0,r.getBoolAtIndex)(l,13)||(0,r.getBoolAtIndex)(i,13)?"show":"hide":18===e&&((0,r.getBoolAtIndex)(l,13)||(0,r.getBoolAtIndex)(i,13))?"show":"hide",o.includes("show")&&!o.includes("item")&&((null==t?void 0:t.alarm)&&(o=o.replace("AlarmState","")+" AlarmState"),(null==t?void 0:t.changing)&&(o=o.replace("Changing","")+" Changing"),(null==t?void 0:t.manual)&&(o=o.replace("Manual","")+" Manual"),(null==t?void 0:t.masked)&&!t.alarm&&(o=o.replace("NoAlarmMask","")+" NoAlarmMask"),(null==t?void 0:t.masked)&&(o=o.replace("Masked","")+" Masked"),(null==t?void 0:t.actFB)&&(o=o.replace("Activated","")+" Activated"),(null==t?void 0:t.deActFB)&&(o=o.replace("Deactivated","")+" Deactivated"),(null==t?void 0:t.locate)&&(o=o.replace("circle","")+" circle")),o},t.getValveMpItemClassName=(e,t)=>{var n,a;let o="";const l=null!==(n=null==t?void 0:t.activatedConfig)&&void 0!==n?n:0,i=null!==(a=null==t?void 0:t.deactivatedConfig)&&void 0!==a?a:0;return e<8?o=(0,r.getBoolAtIndex)(l,e)&&(null==t?void 0:t.actFB)||(0,r.getBoolAtIndex)(i,e)&&(null==t?void 0:t.deActFB)?"show item":"hide item":9===e?o="show":8===e?o=(0,r.getBoolAtIndex)(l,e)||(0,r.getBoolAtIndex)(i,e)?"show":"hide":10===e?(0,r.getBoolAtIndex)(l,10)||(0,r.getBoolAtIndex)(i,10)?(o="show item",o=(null==t?void 0:t.usl)?o.replace("Activated","")+" Activated":o.replace("Deactivated","")+" Deactivated"):o="hide item":11===e?(0,r.getBoolAtIndex)(l,11)||(0,r.getBoolAtIndex)(i,11)?(o="show item",o=(null==t?void 0:t.lsl)?o.replace("Activated","")+" Activated":o.replace("Deactivated","")+" Deactivated"):o="hide item":12===e&&((null==t?void 0:t.locate)?(o=o.replace("show item","")+" show item",((0,r.getBoolAtIndex)(l,8)||(0,r.getBoolAtIndex)(i,8))&&(o=o.replace("show large item","")+" show large item")):o=o.replace("hide item","")+" hide item"),o.includes("show")&&!o.includes("item")&&((null==t?void 0:t.alarm)&&(o=o.replace("AlarmState","")+" AlarmState"),(null==t?void 0:t.changing)&&(o=o.replace("Changing","")+" Changing"),(null==t?void 0:t.manual)&&(o=o.replace("Manual","")+" Manual"),(null==t?void 0:t.masked)&&!t.alarm&&(o=o.replace("NoAlarmMask","")+" NoAlarmMask"),(null==t?void 0:t.masked)&&(o=o.replace("Masked","")+" Masked"),(null==t?void 0:t.actFB)&&(o=o.replace("Activated","")+" Activated"),(null==t?void 0:t.deActFB)&&(o=o.replace("Deactivated","")+" Deactivated")),o},t.itemNames=Object.entries(a.ItemNameEnum).map(((e,t)=>({key:(0,o.v4)(),name:e,value:e[1],index:t}))),t.valveMpItemNames=Object.entries(a.valveMpItemNameEnum).map(((e,t)=>({key:(0,o.v4)(),name:e,value:e[1],index:t}))),t.getItemIdPositionClassName=(e,t)=>{if(!e.includes("itemId popover"))return console.warn("Function getItemIdPositionClassName called when 'itemId popover' not in given className"),e;switch(e="itemId popover",t){case"left":e=e.replace("position-left","")+" position-left";break;case"right":e=e.replace("position-right","")+" position-right";break;case"top-left":e=e.replace("position-top-left","")+" position-top-left";break;case"top-right":e=e.replace("position-top-right","")+" position-top-right";break;case"bottom-left":e=e.replace("position-bottom-left","")+" position-bottom-left";break;case"bottom-right":e=e.replace("position-bottom-right","")+" position-bottom-right"}return e}},511:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.useValveReducer=function(){const[e,t]=(0,r.useImmerReducer)(o,a.valveStatus);return{state:e,reducer:{updateActConfig:function(e){t({type:"UPDATE_ACT_CONFIG",value:e})},updateDeActConfig:function(e){t({type:"UPDATE_DEACT_CONFIG",value:e})},updateAlarm:function(){t({type:"UPDATE_ALARM"})},updateActFB:function(){t({type:"UPDATE_ACT_FB"})},updateDeActFB:function(){t({type:"UPDATE_DE_ACT_FB"})},updateUsl:function(){t({type:"UPDATE_USL"})},updateLsl:function(){t({type:"UPDATE_LSL"})},updateManual:function(){t({type:"UPDATE_MANUAL"})},updateMasked:function(){t({type:"UPDATE_MASKED"})},updateChanging:function(){t({type:"UPDATE_CHANGING"})},updateLocate:function(){t({type:"UPDATE_LOCATE"})}}}},t.ParameterReducer=l,t.paramItemsReducer=function(){const[e,t]=(0,r.useImmerReducer)(l,a.parameterInitialState);return{state:e,reducer:{updateValue:function(e,n){t({type:"UPDATE_VALUE",index:e,value:n})}}}},t.useValveMpCommandReducer=function(){const[e,t]=(0,r.useImmerReducer)(i,a.initialControlState);return{state:e,reducer:{updateAutoManSelection:function(e){t({type:"UPDATE_AUTO_MANUAL",mode:e})},updateMainManualOn:function(){t({type:"UPDATE_MAIN_MAN_ON"})},updateMainManualOff:function(){t({type:"UPDATE_MAIN_MAN_OFF"})},updateUslManualOn:function(){t({type:"UPDATE_USL_MAN_ON"})},updateUslManualOff:function(){t({type:"UPDATE_USL_MAN_OFF"})},updateLslManualOn:function(){t({type:"UPDATE_LSL_MAN_ON"})},updateLslManualOff:function(){t({type:"UPDATE_LSL_MAN_OFF"})}}}};const r=n(348),a=n(390);function o(e,t){switch(t.type){case"UPDATE_ACT_CONFIG":return e.activatedConfig=t.value,e;case"UPDATE_DEACT_CONFIG":return e.deactivatedConfig=t.value,e;case"UPDATE_ACT_FB":return e.actFB=!e.actFB,e;case"UPDATE_DE_ACT_FB":return e.deActFB=!e.deActFB,e;case"UPDATE_USL":return e.usl=!e.usl,e;case"UPDATE_LSL":return e.lsl=!e.lsl,e;case"UPDATE_MANUAL":return e.manual=!e.manual,e;case"UPDATE_ALARM":return e.alarm=!e.alarm,e;case"UPDATE_MASKED":return e.masked=!e.masked,e;case"UPDATE_CHANGING":return e.changing=!e.changing,e;case"UPDATE_LOCATE":return e.locate=!e.locate,e;default:return e}}function l(e,t){return"UPDATE_VALUE"===t.type?(e[t.index].input.value=t.value,e):e}function i(e,t){switch(t.type){case"UPDATE_AUTO_MANUAL":return e.main?("auto"===t.mode?(e.main.auto=!0,e.main.manual=!1):"manual"===t.mode&&(e.main.auto=!1,e.main.manual=!0),console.log(`draft.main.auto ${e.main.auto}`),console.log(`draft.main.manual ${e.main.manual}`),e):e;case"UPDATE_MAIN_MAN_ON":return e.main&&(e.main.on=!0,e.main.off=!1),e;case"UPDATE_MAIN_MAN_OFF":return e.main&&(e.main.on=!1,e.main.off=!0),e;case"UPDATE_USL_MAN_ON":return e.upperSeat&&(e.upperSeat.on=!0,e.upperSeat.off=!1),e;case"UPDATE_USL_MAN_OFF":return e.upperSeat&&(e.upperSeat.on=!1,e.upperSeat.off=!0),e;case"UPDATE_LSL_MAN_ON":return e.lowerSeat&&(e.lowerSeat.on=!0,e.lowerSeat.off=!1),e;case"UPDATE_LSL_MAN_OFF":return e.lowerSeat&&(e.lowerSeat.on=!1,e.lowerSeat.off=!0),e;default:return e}}},535:function(e,t,n){"use strict";var r=this&&this.__rest||function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var a=0;for(r=Object.getOwnPropertySymbols(e);a<r.length;a++)t.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(e,r[a])&&(n[r[a]]=e[r[a]])}return n};Object.defineProperty(t,"__esModule",{value:!0}),t.useCreateContext=function(e,t){const n=a.createContext(t),o=e=>{const{children:t}=e,o=r(e,["children"]),l=a.useMemo((()=>o),Object.values(o));return a.createElement(n.Provider,{value:l},t)};return o.displayName=e+"Provider",[o,function(r){const o=a.useContext(n);if(o)return o;if(void 0!==t)return t;throw new Error(`\`${r}\` must be used within \`${e}\``)}]};const a=n(883)},542:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ItemPositionEnum=t.valveMpItemClickableNameEnum=t.ItemClickableNameEnum=t.valveMpItemNameEnum=t.ItemNameEnum=t.ValveClassNameEnum=t.VALVE_COMPONENT_TYPE=void 0,t.VALVE_COMPONENT_TYPE="hmi.process_objects.Valve",t.ValveClassNameEnum={AlarmState:"AlarmState",Activated:"Activated",Deactivated:"Deactivated",Manual:"Manual",Masked:"Masked",Changing:"Changing",NoAlarmMask:"NoAlarmMask",Locate:"Locate"},t.ItemNameEnum={V1b1:"v1b1",V1b2:"v1b2",V1b3:"v1b3",V1b4:"v1b4",V2b1:"v2b1",V2b2:"v2b2",V2b3:"v2b3",V2b4:"v2b4",V3b1:"v3b1",V3b2:"v3b2",V3b3:"v3b3",V3b4:"v3b4",V2:"v2",V3:"v3",V1:"v1",V2f1:"v2f1",V2f2:"v2f2",V3f1:"v3f1",V3f2:"v3f2"},t.valveMpItemNameEnum={V1b1:"v1b1",V1b2:"v1b2",V1b3:"v1b3",V1b4:"v1b4",V2b1:"v2b1",V2b2:"v2b2",V2b3:"v2b3",V2b4:"v2b4",V2:"v2",V1:"v1",usl:"usl",lsl:"lsl",locate:"locate"},t.ItemClickableNameEnum={V1b1:"v1b1",V1b2:"v1b2",V1b3:"v1b3",V1b4:"v1b4",V2b1:"v2b1",V2b2:"v2b2",V2b3:"v2b3",V2b4:"v2b4",V3b1:"v3b1",V3b2:"v3b2",V3b3:"v3b3",V3b4:"v3b4",V2:"v2",V3:"v3",V1:"v1"},t.valveMpItemClickableNameEnum={V1b1:"v1b1",V1b2:"v1b2",V1b3:"v1b3",V1b4:"v1b4",V2b1:"v2b1",V2b2:"v2b2",V2b3:"v2b3",V2b4:"v2b4",V2:"v2",V1:"v1"},t.ItemPositionEnum={v1b1:"v1b1",v1b2:"v1b2",v1b3:"v1b3",v1b4:"v1b4",v2b1:"v2b1",V2b2:"v2b2",v2b3:"v2b3",v2b4:"v2b4",v3b1:"v3b1",v3b2:"v3b2",v3b3:"v3b3",v3b4:"v3b4",v2:"v2",v3:"v3"}},557:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.URL=t.DNS=void 0;const r=n(829),a=n(988);var o=n(988);function l(e,t,n,o){return(0,a.default)(80,r.default,e,t,n,o)}Object.defineProperty(t,"DNS",{enumerable:!0,get:function(){return o.DNS}}),Object.defineProperty(t,"URL",{enumerable:!0,get:function(){return o.URL}}),l.DNS=a.DNS,l.URL=a.URL,t.default=l},568:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=n(797),a=n(11);t.default=function(e){const t=(n="string"==typeof e?(0,r.default)(e):e,Uint8Array.of((15&n[6])<<4|n[7]>>4&15,(15&n[7])<<4|(240&n[4])>>4,(15&n[4])<<4|(240&n[5])>>4,(15&n[5])<<4|(240&n[0])>>4,(15&n[0])<<4|(240&n[1])>>4,(15&n[1])<<4|(240&n[2])>>4,96|15&n[2],n[3],n[8],n[9],n[10],n[11],n[12],n[13],n[14],n[15]));var n;return"string"==typeof e?(0,a.unsafeStringify)(t):t}},591:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.URL=t.DNS=void 0;const r=n(338),a=n(988);var o=n(988);function l(e,t,n,o){return(0,a.default)(48,r.default,e,t,n,o)}Object.defineProperty(t,"DNS",{enumerable:!0,get:function(){return o.DNS}}),Object.defineProperty(t,"URL",{enumerable:!0,get:function(){return o.URL}}),l.DNS=a.DNS,l.URL=a.URL,t.default=l},697:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-8][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$/i},702:(e,t,n)=>{"use strict";n.r(t)},740:(e,t,n)=>{"use strict";var r;Object.defineProperty(t,"__esModule",{value:!0}),t.ValveMpCompound=t.useValveContext=t.ValveContextProvider=void 0;const a=n(883),o=n(511),l=n(506),i=n(152),u=n(535),s=n(542),c=n(390),f=s.VALVE_COMPONENT_TYPE;r=(0,u.useCreateContext)("ValveMpCompound"),t.ValveContextProvider=r[0],t.useValveContext=r[1],t.ValveMpCompound={Root:({componentProps:e,valveProps:n,onActionPerformed:r,children:l})=>a.createElement(t.ValveContextProvider,{valveProps:n,componentProps:e,onActionPerformed:r,useValveReducer:o.useValveReducer},l),valve:()=>{var e;const{valveProps:n,onActionPerformed:r,componentProps:o}=(0,t.useValveContext)("Valve"),u=a.useRef(null),{position:s,emit:d}=o,{processObject:p}=n,{status:m}=p||c.processObjectProps,v=null!==(e=null==s?void 0:s.x)&&void 0!==e&&e;let b=l.valveMpItemNames;return(null==m?void 0:m.locate)||(b=b.slice(0,-1)),v?a.createElement("div",Object.assign({ref:u},d({classes:["hmi-component hmi-component-valve__mp "]}),{"data-component":f,onClick:r}),b.map((({value:e,index:t,key:n})=>a.createElement(i.default,{itemClassName:e+" "+(0,l.getValveMpItemClassName)(t,m),key:n})))):a.createElement("div",Object.assign({ref:u},d({classes:["hmi-component hmi-component__column "]}),{"data-component":f,onClick:r}),a.createElement("div",{className:"hmi-component__row"},a.createElement("div",{className:"hmi-component-valve__mp"},b.map((({value:e,index:t,key:n})=>a.createElement(i.default,{itemClassName:e+" "+(0,l.getValveMpItemClassName)(t,m),key:n}))))))},popover:({anchorEl:e})=>{const{valveProps:n,componentProps:r}=(0,t.useValveContext)("Popover"),{showLabel:o,labelPosition:i,processObject:u}=n,{status:s}=u||c.processObjectProps;if(!o)return null;const{position:f}=r;let d="itemId popover position-left";return i&&(d=(0,l.getItemIdPositionClassName)(d,i)),a.createElement("div",{className:d,style:{top:f.y,left:f.x}},a.createElement("div",{style:{padding:8}},null==s?void 0:s.itemName))}}},746:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=n(697);t.default=function(e){return"string"==typeof e&&r.default.test(e)}},770:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=n(746);t.default=function(e){if(!(0,r.default)(e))throw TypeError("Invalid UUID");return parseInt(e.slice(14,15),16)}},779:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n="undefined"!=typeof crypto&&crypto.randomUUID&&crypto.randomUUID.bind(crypto);t.default={randomUUID:n}},797:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=n(746);t.default=function(e){if(!(0,r.default)(e))throw TypeError("Invalid UUID");let t;return Uint8Array.of((t=parseInt(e.slice(0,8),16))>>>24,t>>>16&255,t>>>8&255,255&t,(t=parseInt(e.slice(9,13),16))>>>8,255&t,(t=parseInt(e.slice(14,18),16))>>>8,255&t,(t=parseInt(e.slice(19,23),16))>>>8,255&t,(t=parseInt(e.slice(24,36),16))/1099511627776&255,t/4294967296&255,t>>>24&255,t>>>16&255,t>>>8&255,255&t)}},829:(e,t)=>{"use strict";function n(e,t,n,r){switch(e){case 0:return t&n^~t&r;case 1:case 3:return t^n^r;case 2:return t&n^t&r^n&r}}function r(e,t){return e<<t|e>>>32-t}Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){const t=[1518500249,1859775393,2400959708,3395469782],a=[1732584193,4023233417,2562383102,271733878,3285377520],o=new Uint8Array(e.length+1);o.set(e),o[e.length]=128;const l=(e=o).length/4+2,i=Math.ceil(l/16),u=new Array(i);for(let t=0;t<i;++t){const n=new Uint32Array(16);for(let r=0;r<16;++r)n[r]=e[64*t+4*r]<<24|e[64*t+4*r+1]<<16|e[64*t+4*r+2]<<8|e[64*t+4*r+3];u[t]=n}u[i-1][14]=8*(e.length-1)/Math.pow(2,32),u[i-1][14]=Math.floor(u[i-1][14]),u[i-1][15]=8*(e.length-1)&4294967295;for(let e=0;e<i;++e){const o=new Uint32Array(80);for(let t=0;t<16;++t)o[t]=u[e][t];for(let e=16;e<80;++e)o[e]=r(o[e-3]^o[e-8]^o[e-14]^o[e-16],1);let l=a[0],i=a[1],s=a[2],c=a[3],f=a[4];for(let e=0;e<80;++e){const a=Math.floor(e/20),u=r(l,5)+n(a,i,s,c)+f+t[a]+o[e]>>>0;f=c,c=s,s=r(i,30)>>>0,i=l,l=u}a[0]=a[0]+l>>>0,a[1]=a[1]+i>>>0,a[2]=a[2]+s>>>0,a[3]=a[3]+c>>>0,a[4]=a[4]+f>>>0}return Uint8Array.of(a[0]>>24,a[0]>>16,a[0]>>8,a[0],a[1]>>24,a[1]>>16,a[1]>>8,a[1],a[2]>>24,a[2]>>16,a[2]>>8,a[2],a[3]>>24,a[3]>>16,a[3]>>8,a[3],a[4]>>24,a[4]>>16,a[4]>>8,a[4])}},838:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ParameterListComponentMeta=t.ParameterListComponent=t.COMPONENT_TYPE=void 0;const r=n(883),a=n(390),o=[{label:{text:"text"},input:{value:null,placeholder:"Enter a Number"}}];t.COMPONENT_TYPE="hmi.input.ParameterList",t.ParameterListComponent=e=>{const t=r.useMemo((()=>{const{parameters:t}=e.props||o;return t}),[e.props.parameters]);return r.createElement("div",{className:"display-flex-column"},t.map(((t,n)=>{const{label:a,input:o}=t;return console.log(o.value),r.createElement("label",{key:`${a.text}-parameter${n}`,className:"field small"},r.createElement("span",{className:"label"},a.text),r.createElement("span",{className:"eu"},o.eu),r.createElement("input",{type:"text",id:`${a.text}-parameter${n}`,inputMode:o.inputmode,pattern:o.pattern||"[0-9]*",placeholder:o.placeholder,disabled:!o.editable,value:o.value,onChange:t=>{e.store.props.write(`parameters[${n}].input.value`,t.currentTarget.value)}}))})))},t.ParameterListComponentMeta=class{getComponentType(){return t.COMPONENT_TYPE}getDefaultSize(){return{width:120,height:240}}getPropsReducer(e){return{parameters:e.read("parameters",a.parameterInitialState)}}getViewComponent(){return t.ParameterListComponent}}},863:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.CommandValveMpMeta=t.CommandValveMp=t.COMPONENT_TYPE=void 0;const r=n(883),a=n(511);t.COMPONENT_TYPE="hmi.input.CommandValveMp",t.CommandValveMp=e=>{const t=e.store.props,{interlocks:n}=e.props,o=e=>e.includes(!0,0),l=e=>{p(e),"manual"===e?(t.write("main.auto",!1),t.write("main.manual",!0)):"auto"===e&&(i(),t.write("main.auto",!0),t.write("main.manual",!1))},i=()=>{v(),t.write("main.off",!0),t.write("main.on",!1)},{reducer:u,state:s}=(0,a.useValveMpCommandReducer)(),{main:c,upperSeat:f,lowerSeat:d}=s,{updateAutoManSelection:p,updateMainManualOn:m,updateMainManualOff:v,updateUslManualOn:b,updateUslManualOff:h,updateLslManualOn:y,updateLslManualOff:g}=u;return r.createElement("div",{className:"hmi-component-command-valve-mp hmi-component-command-valve-mp__grid"},r.createElement("label",{className:"main-label"},null==c?void 0:c.label),r.createElement("div",{role:"group",className:"button-group outlined main-auto-manual"},r.createElement("button",{className:"button outlined "+((null==c?void 0:c.auto)?"selected":""),disabled:o((null==n?void 0:n.main)||[]),onClick:()=>l("auto")},"Auto "),r.createElement("button",{className:"button outlined "+((null==c?void 0:c.manual)?"selected":""),disabled:o((null==n?void 0:n.main)||[]),onClick:()=>l("manual")},"Manual")),r.createElement("div",{role:"group",className:"button-group outlined main-on-off"},r.createElement("button",{className:"button outlined "+((null==c?void 0:c.on)?"selected":""),disabled:o((null==n?void 0:n.main)||[])||(null==c?void 0:c.auto),onClick:()=>{m(),t.write("main.on",!0),t.write("main.off",!1)}},"On "),r.createElement("button",{className:"button outlined "+((null==c?void 0:c.off)?"selected":""),disabled:o((null==n?void 0:n.main)||[])||(null==c?void 0:c.auto),onClick:i},"Off")),r.createElement("label",{className:"upper-seat-label"},null==f?void 0:f.label),r.createElement("div",{role:"group",className:"button-group outlined upper-seat-on-off"},r.createElement("button",{className:"button outlined "+((null==f?void 0:f.on)?"selected":""),disabled:o((null==n?void 0:n.upperSeat)||[])||(null==c?void 0:c.auto),onClick:()=>{b(),t.write("upperSeat.on",!0),t.write("upperSeat.off",!1)}},"On "),r.createElement("button",{className:"button outlined "+((null==f?void 0:f.off)?"selected":""),disabled:o((null==n?void 0:n.upperSeat)||[])||(null==c?void 0:c.auto),onClick:()=>{h(),t.write("upperSeat.off",!0),t.write("upperSeat.on",!1)}},"Off")),r.createElement("label",{className:"lower-seat-label"},null==d?void 0:d.label),r.createElement("div",{role:"group",className:"button-group outlined lower-seat-on-off"},r.createElement("button",{className:"button outlined "+((null==d?void 0:d.on)?"selected":""),disabled:o((null==n?void 0:n.lowerSeat)||[])||(null==c?void 0:c.auto),onClick:()=>{y(),t.write("lowerSeat.on",!0),t.write("lowerSeat.off",!1)}},"On "),r.createElement("button",{className:"button outlined "+((null==d?void 0:d.off)?"selected":""),disabled:o((null==n?void 0:n.lowerSeat)||[])||(null==c?void 0:c.auto),onClick:()=>{g(),t.write("lowerSeat.off",!0),t.write("lowerSeat.on",!1)},value:"true"},"Off")))},t.CommandValveMpMeta=class{getComponentType(){return t.COMPONENT_TYPE}getViewComponent(){return t.CommandValveMp}getDefaultSize(){return{width:24,height:48}}getPropsReducer(e){return{security:{enabled:e.readBoolean("security.enabled",!1),accesslevel:e.readNumber("security.accesslevel",511),userNames:e.read("security.userNames",["admin"]),userRoles:e.read("security.userRoles",["Administrator"])},interlocks:{main:e.readArray("interlocks.main"),upperSeat:e.readArray("interlocks.upperSeat"),lowerSeat:e.readArray("interlocks.lowerSeat")},main:e.read("main",{label:"",auto:!0,manual:!1,off:!0,on:!1}),upperSeat:e.read("upperSeat",{label:"",off:!0,on:!1}),lowerSeat:e.read("lowerSeat",{label:"",off:!0,on:!1})}}}},883:e=>{"use strict";e.exports=t},973:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ValveMeta=t.Valve=t.COMPONENT_TYPE=void 0;const r=n(883),a=n(377),o=n(740),l=n(390);t.COMPONENT_TYPE="hmi.process_objects.Valve_mp";class i extends a.Component{constructor(e){super(e),this.processObject=this.props.props.processObject||l.processObjectProps,this.status=this.processObject.status,this.showLabel=this.props.props.showLabel||!1,this.labelPosition=this.props.props.labelPosition||"left",this.onActionPerformed=()=>{this.props.eventsEnabled?(console.log("Valve clicked!"),this.props.componentEvents.fireComponentEvent("onActionPerformed",{})):console.log("Valve is disabled in the design-scope")},this.valveRef=r.createRef()}componentDidMount(){}render(){return r.createElement(o.ValveMpCompound.Root,{componentProps:this.props,valveProps:this.props.props,onActionPerformed:this.onActionPerformed},r.createElement(o.ValveMpCompound.valve,null),r.createElement(o.ValveMpCompound.popover,{anchorEl:this.valveRef.current}))}}t.Valve=i,t.ValveMeta=class{getComponentType(){return t.COMPONENT_TYPE}getViewComponent(){return i}getDefaultSize(){return{width:24,height:48}}getPropsReducer(e){return console.log(`itemName: ${e.readString("processObject.status.itemName")} showLabel ${e.readBoolean("showLabel")}`),{processObject:{status:{alarm:e.readBoolean("processObject.status.alarm",!1),actFB:e.readBoolean("processObject.status.actFB",!1),deActFB:e.readBoolean("processObject.status.deActFB",!1),activatedConfig:e.readNumber("processObject.status.activatedConfig",511),deactivatedConfig:e.readNumber("processObject.status.deactivatedConfig",4095),itemName:e.readString("processObject.status.itemName",""),manual:e.readBoolean("processObject.status.manual",!1),masked:e.readBoolean("processObject.status.masked",!1),changing:e.readBoolean("processObject.status.changing",!1),locate:e.readBoolean("processObject.status.locate",!1),usl:e.readBoolean("processObject.status.usl",!1),lsl:e.readBoolean("processObject.status.lsl",!1)}},showLabel:e.readBoolean("showLabel",!1),labelPosition:e.readString("labelPosition","top-left")}}}},988:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.URL=t.DNS=t.stringToBytes=void 0;const r=n(797),a=n(11);function o(e){e=unescape(encodeURIComponent(e));const t=new Uint8Array(e.length);for(let n=0;n<e.length;++n)t[n]=e.charCodeAt(n);return t}t.stringToBytes=o,t.DNS="6ba7b810-9dad-11d1-80b4-00c04fd430c8",t.URL="6ba7b811-9dad-11d1-80b4-00c04fd430c8",t.default=function(e,t,n,l,i,u){const s="string"==typeof n?o(n):n,c="string"==typeof l?(0,r.default)(l):l;if("string"==typeof l&&(l=(0,r.default)(l)),16!==l?.length)throw TypeError("Namespace must be array-like (16 iterable integer values, 0-255)");let f=new Uint8Array(16+s.length);if(f.set(c),f.set(s,c.length),f=t(f),f[6]=15&f[6]|e,f[8]=63&f[8]|128,i){u=u||0;for(let e=0;e<16;++e)i[u+e]=f[e];return i}return(0,a.unsafeStringify)(f)}}},r={};function a(e){var t=r[e];if(void 0!==t)return t.exports;var o=r[e]={exports:{}};return n[e].call(o.exports,o,o.exports,a),o.exports}a.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var o={};return(()=>{"use strict";var e=o;Object.defineProperty(e,"__esModule",{value:!0}),e.CommandValveMp=e.ParameterListComponent=e.Valve=void 0;const t=a(377),n=a(973);Object.defineProperty(e,"Valve",{enumerable:!0,get:function(){return n.Valve}});const r=a(838);Object.defineProperty(e,"ParameterListComponent",{enumerable:!0,get:function(){return r.ParameterListComponent}});const l=a(863);Object.defineProperty(e,"CommandValveMp",{enumerable:!0,get:function(){return l.CommandValveMp}}),a(702),[new n.ValveMeta,new r.ParameterListComponentMeta,new l.CommandValveMpMeta].forEach((e=>t.ComponentRegistry.register(e)))})(),o})()));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,