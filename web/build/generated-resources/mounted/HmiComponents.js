!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t(require("PerspectiveClient"),require("React")):"function"==typeof define&&define.amd?define("HmiComponents",["PerspectiveClient","React"],t):"object"==typeof exports?exports.HmiComponents=t(require("PerspectiveClient"),require("React")):e.HmiComponents=t(e.PerspectiveClient,e.React)}(self,((e,t)=>(()=>{"use strict";var n={11:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.unsafeStringify=void 0;const r=n(746),o=[];for(let e=0;e<256;++e)o.push((e+256).toString(16).slice(1));function a(e,t=0){return(o[e[t+0]]+o[e[t+1]]+o[e[t+2]]+o[e[t+3]]+"-"+o[e[t+4]]+o[e[t+5]]+"-"+o[e[t+6]]+o[e[t+7]]+"-"+o[e[t+8]]+o[e[t+9]]+"-"+o[e[t+10]]+o[e[t+11]]+o[e[t+12]]+o[e[t+13]]+o[e[t+14]]+o[e[t+15]]).toLowerCase()}t.unsafeStringify=a,t.default=function(e,t=0){const n=a(e,t);if(!(0,r.default)(n))throw TypeError("Stringified UUID is invalid");return n}},152:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0});const r=n(883),o=({itemClassName:e,handleClick:t})=>r.createElement("div",{className:e,onClick:t});o.displayName="Item",t.default=o},182:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.version=t.validate=t.v7=t.v6ToV1=t.v6=t.v5=t.v4=t.v3=t.v1ToV6=t.v1=t.stringify=t.parse=t.NIL=t.MAX=void 0;var r=n(196);Object.defineProperty(t,"MAX",{enumerable:!0,get:function(){return r.default}});var o=n(465);Object.defineProperty(t,"NIL",{enumerable:!0,get:function(){return o.default}});var a=n(797);Object.defineProperty(t,"parse",{enumerable:!0,get:function(){return a.default}});var l=n(11);Object.defineProperty(t,"stringify",{enumerable:!0,get:function(){return l.default}});var u=n(425);Object.defineProperty(t,"v1",{enumerable:!0,get:function(){return u.default}});var i=n(568);Object.defineProperty(t,"v1ToV6",{enumerable:!0,get:function(){return i.default}});var f=n(591);Object.defineProperty(t,"v3",{enumerable:!0,get:function(){return f.default}});var s=n(286);Object.defineProperty(t,"v4",{enumerable:!0,get:function(){return s.default}});var d=n(557);Object.defineProperty(t,"v5",{enumerable:!0,get:function(){return d.default}});var c=n(356);Object.defineProperty(t,"v6",{enumerable:!0,get:function(){return c.default}});var v=n(268);Object.defineProperty(t,"v6ToV1",{enumerable:!0,get:function(){return v.default}});var m=n(299);Object.defineProperty(t,"v7",{enumerable:!0,get:function(){return m.default}});var b=n(746);Object.defineProperty(t,"validate",{enumerable:!0,get:function(){return b.default}});var p=n(770);Object.defineProperty(t,"version",{enumerable:!0,get:function(){return p.default}})},196:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.default="ffffffff-ffff-ffff-ffff-ffffffffffff"},250:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ItemPositionEnum=t.ItemClickableNameEnum=t.ItemNameEnum=t.ValveClassNameEnum=void 0,t.ValveClassNameEnum={AlarmState:"AlarmState",Activated:"Activated",Deactivated:"Deactivated",Manual:"Manual",Masked:"Masked",Changing:"Changing",NoAlarmMask:"NoAlarmMask"},t.ItemNameEnum={V1b2:"v1b2",V1b3:"v1b3",V1b4:"v1b4",V1b1:"v1b1",V2b1:"v2b1",V2b2:"v2b2",V2b3:"v2b3",V2b4:"v2b4",V3b1:"v3b1",V3b2:"v3b2",V3b3:"v3b3",V3b4:"v3b4",V2:"v2",V3:"v3",V1:"v1",V2f1:"v2f1",V2f2:"v2f2",V3f1:"v3f1",V3f2:"v3f2"},t.ItemClickableNameEnum={V1b1:"v1b1",V1b2:"v1b2",V1b3:"v1b3",V1b4:"v1b4",V2b1:"v2b1",V2b2:"v2b2",V2b3:"v2b3",V2b4:"v2b4",V3b1:"v3b1",V3b2:"v3b2",V3b3:"v3b3",V3b4:"v3b4",V2:"v2",V3:"v3",V1:"v1"},t.ItemPositionEnum={v1b1:"v1b1",v1b2:"v1b2",v1b3:"v1b3",v1b4:"v1b4",v2b1:"v2b1",V2b2:"v2b2",v2b3:"v2b3",v2b4:"v2b4",v3b1:"v3b1",v3b2:"v3b2",v3b3:"v3b3",v3b4:"v3b4",v2:"v2",v3:"v3"}},262:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.itemNames=t.getItemClassName=void 0;const r=n(429),o=n(250),a=n(182);t.getItemClassName=(e,t)=>{var n,o;let a="";const l=null!==(n=null==t?void 0:t.activatedConfig)&&void 0!==n?n:0,u=null!==(o=null==t?void 0:t.deactivatedConfig)&&void 0!==o?o:0;return a=e<12?(0,r.getBoolAtIndex)(l,e)&&(null==t?void 0:t.actFB)||(0,r.getBoolAtIndex)(u,e)&&(null==t?void 0:t.deActFB)?"show item":"hide item":14===e?"show":12===e||13===e?(0,r.getBoolAtIndex)(l,e)||(0,r.getBoolAtIndex)(u,e)?"show":"hide":15===e||16===e?(0,r.getBoolAtIndex)(l,12)||(0,r.getBoolAtIndex)(u,12)?"show":"hide":17===e?(0,r.getBoolAtIndex)(l,13)||(0,r.getBoolAtIndex)(u,13)?"show":"hide":18===e&&((0,r.getBoolAtIndex)(l,13)||(0,r.getBoolAtIndex)(u,13))?"show":"hide",a.includes("show")&&!a.includes("item")&&(console.log("index",e,a),(null==t?void 0:t.alarm)&&(a=a.replace("AlarmState","")+" AlarmState"),(null==t?void 0:t.changing)&&(a=a.replace("Changing","")+" Changing"),(null==t?void 0:t.manual)&&(a=a.replace("Manual","")+" Manual"),(null==t?void 0:t.masked)&&!t.alarm&&(a=a.replace("NoAlarmMask","")+" NoAlarmMask"),(null==t?void 0:t.masked)&&(a=a.replace("Masked","")+" Masked"),(null==t?void 0:t.actFB)&&(a=a.replace("Activated","")+" Activated"),(null==t?void 0:t.deActFB)&&(a=a.replace("Deactivated","")+" Deactivated")),a},t.itemNames=Object.keys(o.ItemNameEnum).map((e=>({key:(0,a.v4)(),name:e,value:o.ItemNameEnum,index:Object.keys(o.ItemNameEnum).indexOf(e)})))},268:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0});const r=n(797),o=n(11);t.default=function(e){const t=(n="string"==typeof e?(0,r.default)(e):e,Uint8Array.of((15&n[3])<<4|n[4]>>4&15,(15&n[4])<<4|(240&n[5])>>4,(15&n[5])<<4|15&n[6],n[7],(15&n[1])<<4|(240&n[2])>>4,(15&n[2])<<4|(240&n[3])>>4,16|(240&n[0])>>4,(15&n[0])<<4|(240&n[1])>>4,n[8],n[9],n[10],n[11],n[12],n[13],n[14],n[15]));var n;return"string"==typeof e?(0,o.unsafeStringify)(t):t}},286:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0});const r=n(779),o=n(291),a=n(11);t.default=function(e,t,n){if(r.default.randomUUID&&!t&&!e)return r.default.randomUUID();const l=(e=e||{}).random??e.rng?.()??(0,o.default)();if(l.length<16)throw new Error("Random bytes length must be >= 16");if(l[6]=15&l[6]|64,l[8]=63&l[8]|128,t){if((n=n||0)<0||n+16>t.length)throw new RangeError(`UUID byte range ${n}:${n+15} is out of buffer bounds`);for(let e=0;e<16;++e)t[n+e]=l[e];return t}return(0,a.unsafeStringify)(l)}},291:(e,t)=>{let n;Object.defineProperty(t,"__esModule",{value:!0});const r=new Uint8Array(16);t.default=function(){if(!n){if("undefined"==typeof crypto||!crypto.getRandomValues)throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");n=crypto.getRandomValues.bind(crypto)}return n(r)}},299:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.updateV7State=void 0;const r=n(291),o=n(11),a={};function l(e,t,n){return e.msecs??=-1/0,e.seq??=0,t>e.msecs?(e.seq=n[6]<<23|n[7]<<16|n[8]<<8|n[9],e.msecs=t):(e.seq=e.seq+1|0,0===e.seq&&e.msecs++),e}function u(e,t,n,r,o=0){if(e.length<16)throw new Error("Random bytes length must be >= 16");if(r){if(o<0||o+16>r.length)throw new RangeError(`UUID byte range ${o}:${o+15} is out of buffer bounds`)}else r=new Uint8Array(16),o=0;return t??=Date.now(),n??=127*e[6]<<24|e[7]<<16|e[8]<<8|e[9],r[o++]=t/1099511627776&255,r[o++]=t/4294967296&255,r[o++]=t/16777216&255,r[o++]=t/65536&255,r[o++]=t/256&255,r[o++]=255&t,r[o++]=112|n>>>28&15,r[o++]=n>>>20&255,r[o++]=128|n>>>14&63,r[o++]=n>>>6&255,r[o++]=n<<2&255|3&e[10],r[o++]=e[11],r[o++]=e[12],r[o++]=e[13],r[o++]=e[14],r[o++]=e[15],r}t.updateV7State=l,t.default=function(e,t,n){let i;if(e)i=u(e.random??e.rng?.()??(0,r.default)(),e.msecs,e.seq,t,n);else{const e=Date.now(),o=(0,r.default)();l(a,e,o),i=u(o,a.msecs,a.seq,t,n)}return t??(0,o.unsafeStringify)(i)}},338:(e,t)=>{function n(e){return 14+(e+64>>>9<<4)+1}function r(e,t){const n=(65535&e)+(65535&t);return(e>>16)+(t>>16)+(n>>16)<<16|65535&n}function o(e,t,n,o,a,l){return r((u=r(r(t,e),r(o,l)))<<(i=a)|u>>>32-i,n);var u,i}function a(e,t,n,r,a,l,u){return o(t&n|~t&r,e,t,a,l,u)}function l(e,t,n,r,a,l,u){return o(t&r|n&~r,e,t,a,l,u)}function u(e,t,n,r,a,l,u){return o(t^n^r,e,t,a,l,u)}function i(e,t,n,r,a,l,u){return o(n^(t|~r),e,t,a,l,u)}Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return function(e){const t=new Uint8Array(4*e.length);for(let n=0;n<4*e.length;n++)t[n]=e[n>>2]>>>n%4*8&255;return t}(function(e,t){const o=new Uint32Array(n(t)).fill(0);o.set(e),o[t>>5]|=128<<t%32,o[o.length-1]=t,e=o;let f=1732584193,s=-271733879,d=-1732584194,c=271733878;for(let t=0;t<e.length;t+=16){const n=f,o=s,v=d,m=c;f=a(f,s,d,c,e[t],7,-680876936),c=a(c,f,s,d,e[t+1],12,-389564586),d=a(d,c,f,s,e[t+2],17,606105819),s=a(s,d,c,f,e[t+3],22,-1044525330),f=a(f,s,d,c,e[t+4],7,-176418897),c=a(c,f,s,d,e[t+5],12,1200080426),d=a(d,c,f,s,e[t+6],17,-1473231341),s=a(s,d,c,f,e[t+7],22,-45705983),f=a(f,s,d,c,e[t+8],7,1770035416),c=a(c,f,s,d,e[t+9],12,-1958414417),d=a(d,c,f,s,e[t+10],17,-42063),s=a(s,d,c,f,e[t+11],22,-1990404162),f=a(f,s,d,c,e[t+12],7,1804603682),c=a(c,f,s,d,e[t+13],12,-40341101),d=a(d,c,f,s,e[t+14],17,-1502002290),s=a(s,d,c,f,e[t+15],22,1236535329),f=l(f,s,d,c,e[t+1],5,-165796510),c=l(c,f,s,d,e[t+6],9,-1069501632),d=l(d,c,f,s,e[t+11],14,643717713),s=l(s,d,c,f,e[t],20,-373897302),f=l(f,s,d,c,e[t+5],5,-701558691),c=l(c,f,s,d,e[t+10],9,38016083),d=l(d,c,f,s,e[t+15],14,-660478335),s=l(s,d,c,f,e[t+4],20,-405537848),f=l(f,s,d,c,e[t+9],5,568446438),c=l(c,f,s,d,e[t+14],9,-1019803690),d=l(d,c,f,s,e[t+3],14,-187363961),s=l(s,d,c,f,e[t+8],20,1163531501),f=l(f,s,d,c,e[t+13],5,-1444681467),c=l(c,f,s,d,e[t+2],9,-51403784),d=l(d,c,f,s,e[t+7],14,1735328473),s=l(s,d,c,f,e[t+12],20,-1926607734),f=u(f,s,d,c,e[t+5],4,-378558),c=u(c,f,s,d,e[t+8],11,-2022574463),d=u(d,c,f,s,e[t+11],16,1839030562),s=u(s,d,c,f,e[t+14],23,-35309556),f=u(f,s,d,c,e[t+1],4,-1530992060),c=u(c,f,s,d,e[t+4],11,1272893353),d=u(d,c,f,s,e[t+7],16,-155497632),s=u(s,d,c,f,e[t+10],23,-1094730640),f=u(f,s,d,c,e[t+13],4,681279174),c=u(c,f,s,d,e[t],11,-358537222),d=u(d,c,f,s,e[t+3],16,-722521979),s=u(s,d,c,f,e[t+6],23,76029189),f=u(f,s,d,c,e[t+9],4,-640364487),c=u(c,f,s,d,e[t+12],11,-421815835),d=u(d,c,f,s,e[t+15],16,530742520),s=u(s,d,c,f,e[t+2],23,-995338651),f=i(f,s,d,c,e[t],6,-198630844),c=i(c,f,s,d,e[t+7],10,1126891415),d=i(d,c,f,s,e[t+14],15,-1416354905),s=i(s,d,c,f,e[t+5],21,-57434055),f=i(f,s,d,c,e[t+12],6,1700485571),c=i(c,f,s,d,e[t+3],10,-1894986606),d=i(d,c,f,s,e[t+10],15,-1051523),s=i(s,d,c,f,e[t+1],21,-2054922799),f=i(f,s,d,c,e[t+8],6,1873313359),c=i(c,f,s,d,e[t+15],10,-30611744),d=i(d,c,f,s,e[t+6],15,-1560198380),s=i(s,d,c,f,e[t+13],21,1309151649),f=i(f,s,d,c,e[t+4],6,-145523070),c=i(c,f,s,d,e[t+11],10,-1120210379),d=i(d,c,f,s,e[t+2],15,718787259),s=i(s,d,c,f,e[t+9],21,-343485551),f=r(f,n),s=r(s,o),d=r(d,v),c=r(c,m)}return Uint32Array.of(f,s,d,c)}(function(e){if(0===e.length)return new Uint32Array;const t=new Uint32Array(n(8*e.length)).fill(0);for(let n=0;n<e.length;n++)t[n>>2]|=(255&e[n])<<n%4*8;return t}(e),8*e.length))}},356:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0});const r=n(11),o=n(425),a=n(568);t.default=function(e,t,n){e??={},n??=0;let l=(0,o.default)({...e,_v6:!0},new Uint8Array(16));if(l=(0,a.default)(l),t){for(let e=0;e<16;e++)t[n+e]=l[e];return t}return(0,r.unsafeStringify)(l)}},377:t=>{t.exports=e},398:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ValveFCCompound=void 0;const r=n(883);console.log(u.createContext);const o=n(973),a=n(262),l=n(152),u=n(535),[i,f]=(0,u.createContext)("ValveCompound");t.ValveFCCompound={Root:({valveProps:e,componentProps:t,children:n})=>{const{props:o}=null!=t?t:{};return r.createElement(i,{valveProps:e,componentProps:t,onActionPerformed:()=>{o.eventsEnabled?(console.log("Valve clicked!"),o.componentEvents.fireComponentEvent("onActionPerformed",{})):console.log("Valve is disabled in the design-scope")}},n)},Valve:()=>{var e;const{valveProps:t,componentProps:n}=f("Valve"),{ValveStatus:u}=t,{position:i,props:s}=null!=n?n:{};return null!==(e=null==i?void 0:i.x)&&void 0!==e&&e?r.createElement("div",Object.assign({},null==n?void 0:n.emit({classes:["hmi-component hmi-component-valve "]}),{"data-component":o.COMPONENT_TYPE}),a.itemNames.map((({value:e,index:t,key:n})=>r.createElement(l.default,{itemClassName:e+" "+(0,a.getItemClassName)(t,u),handleClick:s.onActionPerformed,key:n})))):r.createElement("div",Object.assign({},null==n?void 0:n.emit({classes:["hmi-component hmi-component__column "]}),{"data-component":o.COMPONENT_TYPE}),r.createElement("div",{className:"hmi-component__row"},r.createElement("div",{className:"hmi-component-valve"},a.itemNames.map((({value:e,index:t,key:n})=>r.createElement(l.default,{itemClassName:e+" "+(0,a.getItemClassName)(t,u),handleClick:s.onActionPerformed,key:n}))))))}}},425:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.updateV1State=void 0;const r=n(291),o=n(11),a={};function l(e,t,n){return e.msecs??=-1/0,e.nsecs??=0,t===e.msecs?(e.nsecs++,e.nsecs>=1e4&&(e.node=void 0,e.nsecs=0)):t>e.msecs?e.nsecs=0:t<e.msecs&&(e.node=void 0),e.node||(e.node=n.slice(10,16),e.node[0]|=1,e.clockseq=16383&(n[8]<<8|n[9])),e.msecs=t,e}function u(e,t,n,r,o,a,l=0){if(e.length<16)throw new Error("Random bytes length must be >= 16");if(a){if(l<0||l+16>a.length)throw new RangeError(`UUID byte range ${l}:${l+15} is out of buffer bounds`)}else a=new Uint8Array(16),l=0;t??=Date.now(),n??=0,r??=16383&(e[8]<<8|e[9]),o??=e.slice(10,16);const u=(1e4*(268435455&(t+=122192928e5))+n)%4294967296;a[l++]=u>>>24&255,a[l++]=u>>>16&255,a[l++]=u>>>8&255,a[l++]=255&u;const i=t/4294967296*1e4&268435455;a[l++]=i>>>8&255,a[l++]=255&i,a[l++]=i>>>24&15|16,a[l++]=i>>>16&255,a[l++]=r>>>8|128,a[l++]=255&r;for(let e=0;e<6;++e)a[l++]=o[e];return a}t.updateV1State=l,t.default=function(e,t,n){let i;const f=e?._v6??!1;if(e){const t=Object.keys(e);1===t.length&&"_v6"===t[0]&&(e=void 0)}if(e)i=u(e.random??e.rng?.()??(0,r.default)(),e.msecs,e.nsecs,e.clockseq,e.node,t,n);else{const e=Date.now(),o=(0,r.default)();l(a,e,o),i=u(o,a.msecs,a.nsecs,f?void 0:a.clockseq,f?void 0:a.node,t,n)}return t??(0,o.unsafeStringify)(i)}},429:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.getBoolAtIndex=void 0,t.getBoolAtIndex=(e,t)=>e>>t&1},465:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.default="00000000-0000-0000-0000-000000000000"},535:function(e,t,n){var r=this&&this.__rest||function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var o=0;for(r=Object.getOwnPropertySymbols(e);o<r.length;o++)t.indexOf(r[o])<0&&Object.prototype.propertyIsEnumerable.call(e,r[o])&&(n[r[o]]=e[r[o]])}return n};Object.defineProperty(t,"__esModule",{value:!0}),t.createContext=function(e,t){const n=o.default.createContext(t),a=e=>{const{children:t}=e,a=r(e,["children"]),l=o.default.useMemo((()=>a),Object.values(a));return o.default.createElement(n.Provider,{value:l},t)};return a.displayName=e+"Provider",[a,function(r){const a=o.default.useContext(n);if(a)return a;if(void 0!==t)return t;throw new Error(`\`${r}\` must be used within \`${e}\``)}]};const o=n(883)},557:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.URL=t.DNS=void 0;const r=n(829),o=n(988);var a=n(988);function l(e,t,n,a){return(0,o.default)(80,r.default,e,t,n,a)}Object.defineProperty(t,"DNS",{enumerable:!0,get:function(){return a.DNS}}),Object.defineProperty(t,"URL",{enumerable:!0,get:function(){return a.URL}}),l.DNS=o.DNS,l.URL=o.URL,t.default=l},568:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0});const r=n(797),o=n(11);t.default=function(e){const t=(n="string"==typeof e?(0,r.default)(e):e,Uint8Array.of((15&n[6])<<4|n[7]>>4&15,(15&n[7])<<4|(240&n[4])>>4,(15&n[4])<<4|(240&n[5])>>4,(15&n[5])<<4|(240&n[0])>>4,(15&n[0])<<4|(240&n[1])>>4,(15&n[1])<<4|(240&n[2])>>4,96|15&n[2],n[3],n[8],n[9],n[10],n[11],n[12],n[13],n[14],n[15]));var n;return"string"==typeof e?(0,o.unsafeStringify)(t):t}},591:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.URL=t.DNS=void 0;const r=n(338),o=n(988);var a=n(988);function l(e,t,n,a){return(0,o.default)(48,r.default,e,t,n,a)}Object.defineProperty(t,"DNS",{enumerable:!0,get:function(){return a.DNS}}),Object.defineProperty(t,"URL",{enumerable:!0,get:function(){return a.URL}}),l.DNS=o.DNS,l.URL=o.URL,t.default=l},697:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.default=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-8][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$/i},702:(e,t,n)=>{n.r(t)},746:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0});const r=n(697);t.default=function(e){return"string"==typeof e&&r.default.test(e)}},770:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0});const r=n(746);t.default=function(e){if(!(0,r.default)(e))throw TypeError("Invalid UUID");return parseInt(e.slice(14,15),16)}},779:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0});const n="undefined"!=typeof crypto&&crypto.randomUUID&&crypto.randomUUID.bind(crypto);t.default={randomUUID:n}},797:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0});const r=n(746);t.default=function(e){if(!(0,r.default)(e))throw TypeError("Invalid UUID");let t;return Uint8Array.of((t=parseInt(e.slice(0,8),16))>>>24,t>>>16&255,t>>>8&255,255&t,(t=parseInt(e.slice(9,13),16))>>>8,255&t,(t=parseInt(e.slice(14,18),16))>>>8,255&t,(t=parseInt(e.slice(19,23),16))>>>8,255&t,(t=parseInt(e.slice(24,36),16))/1099511627776&255,t/4294967296&255,t>>>24&255,t>>>16&255,t>>>8&255,255&t)}},829:(e,t)=>{function n(e,t,n,r){switch(e){case 0:return t&n^~t&r;case 1:case 3:return t^n^r;case 2:return t&n^t&r^n&r}}function r(e,t){return e<<t|e>>>32-t}Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){const t=[1518500249,1859775393,2400959708,3395469782],o=[1732584193,4023233417,2562383102,271733878,3285377520],a=new Uint8Array(e.length+1);a.set(e),a[e.length]=128;const l=(e=a).length/4+2,u=Math.ceil(l/16),i=new Array(u);for(let t=0;t<u;++t){const n=new Uint32Array(16);for(let r=0;r<16;++r)n[r]=e[64*t+4*r]<<24|e[64*t+4*r+1]<<16|e[64*t+4*r+2]<<8|e[64*t+4*r+3];i[t]=n}i[u-1][14]=8*(e.length-1)/Math.pow(2,32),i[u-1][14]=Math.floor(i[u-1][14]),i[u-1][15]=8*(e.length-1)&4294967295;for(let e=0;e<u;++e){const a=new Uint32Array(80);for(let t=0;t<16;++t)a[t]=i[e][t];for(let e=16;e<80;++e)a[e]=r(a[e-3]^a[e-8]^a[e-14]^a[e-16],1);let l=o[0],u=o[1],f=o[2],s=o[3],d=o[4];for(let e=0;e<80;++e){const o=Math.floor(e/20),i=r(l,5)+n(o,u,f,s)+d+t[o]+a[e]>>>0;d=s,s=f,f=r(u,30)>>>0,u=l,l=i}o[0]=o[0]+l>>>0,o[1]=o[1]+u>>>0,o[2]=o[2]+f>>>0,o[3]=o[3]+s>>>0,o[4]=o[4]+d>>>0}return Uint8Array.of(o[0]>>24,o[0]>>16,o[0]>>8,o[0],o[1]>>24,o[1]>>16,o[1]>>8,o[1],o[2]>>24,o[2]>>16,o[2]>>8,o[2],o[3]>>24,o[3]>>16,o[3]>>8,o[3],o[4]>>24,o[4]>>16,o[4]>>8,o[4])}},883:e=>{e.exports=t},973:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ValveMeta=t.Valve=t.COMPONENT_TYPE=void 0;const r=n(883),o=n(377),a=n(398);t.COMPONENT_TYPE="hmi.process_objects.Valve";class l extends o.Component{constructor(){var e;super(...arguments),this.valveStatus=null!==(e=this.props.props.ValveStatus)&&void 0!==e?e:{}}componentDidMount(){}render(){return r.createElement(a.ValveFCCompound.Root,{componentProps:this.props||{},valveProps:this.props.props},r.createElement("div",null,"This is Valve"))}}t.Valve=l,t.ValveMeta=class{getComponentType(){return t.COMPONENT_TYPE}getViewComponent(){return l}getDefaultSize(){return{width:75,height:75}}getPropsReducer(e){return console.log("ValveStatus",e.read("ValveStatus")),{ValveStatus:{alarm:e.readBoolean("ValveStatus.Alarm",!1),actFB:e.readBoolean("ValveStatus.ActFB",!1),deActFB:e.readBoolean("ValveStatus.DeActFB",!1),activatedConfig:e.readNumber("ValveStatus.ActivatedConfig",6),deactivatedConfig:e.readNumber("ValveStatus.DeactivatedConfig",0),tagName:e.readString("ValveStatus.TagName",""),manual:e.readBoolean("ValveStatus.Manual",!1),masked:e.readBoolean("ValveStatus.Masked",!1),changing:e.readBoolean("ValveStatus.Changing",!1)}}}}},988:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.URL=t.DNS=t.stringToBytes=void 0;const r=n(797),o=n(11);function a(e){e=unescape(encodeURIComponent(e));const t=new Uint8Array(e.length);for(let n=0;n<e.length;++n)t[n]=e.charCodeAt(n);return t}t.stringToBytes=a,t.DNS="6ba7b810-9dad-11d1-80b4-00c04fd430c8",t.URL="6ba7b811-9dad-11d1-80b4-00c04fd430c8",t.default=function(e,t,n,l,u,i){const f="string"==typeof n?a(n):n,s="string"==typeof l?(0,r.default)(l):l;if("string"==typeof l&&(l=(0,r.default)(l)),16!==l?.length)throw TypeError("Namespace must be array-like (16 iterable integer values, 0-255)");let d=new Uint8Array(16+f.length);if(d.set(s),d.set(f,s.length),d=t(d),d[6]=15&d[6]|e,d[8]=63&d[8]|128,u){i=i||0;for(let e=0;e<16;++e)u[i+e]=d[e];return u}return(0,o.unsafeStringify)(d)}}},r={};function o(e){var t=r[e];if(void 0!==t)return t.exports;var a=r[e]={exports:{}};return n[e].call(a.exports,a,a.exports,o),a.exports}o.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var a={};return(()=>{var e=a;Object.defineProperty(e,"__esModule",{value:!0}),e.Valve=void 0;const t=o(377),n=o(973);Object.defineProperty(e,"Valve",{enumerable:!0,get:function(){return n.Valve}}),o(702),[new n.ValveMeta].forEach((e=>t.ComponentRegistry.register(e)))})(),a})()));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,